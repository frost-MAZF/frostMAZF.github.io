<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>写在我的小窝之前.</title>
    <url>/%E6%88%91%E6%83%B3%E8%AF%B4%E7%9A%84/</url>
    <content><![CDATA[<p>我爱这世界,爱你,爱你们,愿这世间无病无痛,再无悲伤.<br></p>
<h1 id="更新时间"><a href="#更新时间" class="headerlink" title="更新时间"></a>更新时间</h1><p>这里是一个博客的成长历程.<br></p>
<ul>
<li><a href="#%E6%9B%B4%E6%96%B0%E6%97%B6%E9%97%B4">更新时间</a><ul>
<li><a href="#2024-04-17">2024-04-17</a></li>
<li><a href="#2024-04-23">2024-04-23</a></li>
</ul>
</li>
</ul>
<h2 id="2024-04-17"><a href="#2024-04-17" class="headerlink" title="2024-04-17"></a>2024-04-17</h2><p>虽然这个写博客的项目早在2022年就已经立项,期间辗转Notion,FlowUs,从飞书又转到钉钉,今年才发现原来Github可以写博客,于是这个博客就来了.<br><br>由于我没有国内的服务器,托管到gitee不能自定义域名,虽然DNS是CloudFlare,但访问也可能会慢.<br><br>这是一个静态网页,也就是说,想要刷新内容,可能需要包括但不限于重启浏览器,关闭标签页等操作.<br></p>
<h2 id="2024-04-23"><a href="#2024-04-23" class="headerlink" title="2024-04-23"></a>2024-04-23</h2><p>那么有关于未来的一些更新方向,我认为是将现有的内容进行完善,这个过程应该会持续一个月到三个月不等,当然可能不会全部都会有后续,随后就是把此前Notion的内容转移,目前呢就这么多.<br><br>此外我觉得既然是博客,随意一些就得了,因此还会有别的内容.<br></p>
]]></content>
      <categories>
        <category>闲聊</category>
      </categories>
  </entry>
  <entry>
    <title>心走地</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E6%96%87%E5%AD%A6/%E6%9C%9D%E5%8D%97%E6%9D%82%E8%AE%B0/%E5%BF%83%E8%B5%B0%E5%9C%B0/</url>
    <content><![CDATA[<p>Created: May 9, 2023 1:46 PM<br></p>
<p>——失常的世界！ <br></p>
<p>   心脏！  <br></p>
<p>  与其这样，与其这样，让我们去遥远的地方。未来！倔强！脆弱！如此的岁月耗尽我的生命！    即使如此勇气，也依旧走在心沿！走在路上！因为不惧怕，即便脆弱！天空巨响，那是我心的唯一主旋律调动！ <br></p>
<p>   终点站何处？不在乎！我始终走在心沿。路上的故事，海角天涯！ <br></p>
<p>   海角何处？无处天涯！  <br></p>
<p>  我走在心沿，看我脆弱，听我旋律！  <br></p>
<p>  世纪新潮，那是我！今昔非比，只剩我！ <br></p>
<p>   不惑耄耋的婴儿无处不在，婴儿的不惑耄耋在何处？在心沿！在眼前！我用我的一切捍卫！   <br></p>
<p>   “癫狂的人在变得癫狂！重复的人在说我癫狂！”  <br></p>
<p>  自己在何处，在心沿。  <br></p>
<p>  我在路上飞驰，我在雨夜的夜中雨水常伴身旁！我在路上停留，我在夜的雨夜中黑夜常伴身旁！ <br></p>
<p>   思考，无数的幻境；空白，无数的破碎。    <br></p>
<p>   ——为什么？ <br></p>
<p>   我在听我声！看我形！我仅是我自己，任何人都无法成为我！我也无法成为任何人！他们缺了我的故事！缺了我走在心沿上的每一个脚印！缺了我无法诉说的内心！他们仅能跟随我的脚步行走在万丈深渊！走错一步便跌落谷底。 <br></p>
<p>   于是他们仅能跟随我，而我却走在森林大海里，他们找不着我，仅能颤栗行走。<br></p>
<p>  他们只是浮于表面的倒影，他们看不清真切，他们看不见湖底的鱼，他们看不见湖底的珊瑚，他们看不见湖底的蓝光闪烁的水母也看不见寂静幽暗的深处有着什么。<br></p>
<p>  我时刻不停下，时刻都在新的遥远的地方。<br></p>
<p>   ——come back.<br></p>
]]></content>
      <categories>
        <category>短文</category>
      </categories>
  </entry>
  <entry>
    <title>心跳</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E6%96%87%E5%AD%A6/%E6%9C%9D%E5%8D%97%E6%9D%82%E8%AE%B0/%E5%BF%83%E8%B7%B3/</url>
    <content><![CDATA[<p>Created: May 9, 2023 2:03 PM<br></p>
<p>我很幸运，在我为数不多的岁月里，心跳了无数次。<br></p>
<p>　2022&#x2F;4&#x2F;15<br></p>
<p>　摩根很烦恼，至少在外人看来是这样的，他一直都是愁眉苦脸的，范肯总是说：“你看，你看！忧愁的人啊，为什么不来和我们一起吃苹果派呢？”至于为什么要这么说，那是因为他的爸爸——肯纳先生租了一个店铺，在那卖苹果派呢！不止是苹果派，还有草莓派，香蕉派，蓝莓派……很多很多派！<br></p>
<p>　摩根并不喜欢吃这些派，他更喜欢帮派，那种热血沸腾的感觉是他最爱的感觉，可城内的两大帮派都不想招收这个瘦弱的男孩。　<br></p>
<p>　“妈妈总是说，你要是能像你爸爸是个英雄，她就奖励我一辆自行车。”摩根和他的小伙伴们说道。<br></p>
<p>　“哈哈哈，你看，我就说吧，摩根那家伙一定会说这件事。”小伙伴们去找范肯说这件事，因为范肯跟摩根是邻居，但范肯总是这样嘲笑摩根。　<br></p>
<p>　摩根总是喜欢幻想自己成为英雄，受到城市里所有人的膜拜，他的爸爸是一个英雄，为了救下一位轻生的人，掉下奔涌的江流里消失不见了。所有人集资为摩根的父亲建立起了一座雕像，就树立在城市广场的中央。　<br></p>
<p>　有一天，摩根的妈妈跟摩根说，你得找到属于自己的东西，你的爸爸是勇敢善良的人，你同样可以成为勇敢善良的人，但他总是没脑子，你也不必成为任何一个人，而是成为你自己。<br></p>
<p>　　那天之后，摩根总是在想，什么才是我自己？摩根想破了他的脑袋也没有想明白，他看见城里的帮派战争，觉得这样很酷很英雄，为了兄弟出生入死，所以他也想成为一个帮派混混。<br></p>
<p>　　直到不久前，维德尔斯帮派的老大在一次帮派争斗中死了，老大变成了一位和蔼可亲的老人，老人第一件事就是找到摩根并跟他说了一句话：“我虽不是好人，但你父亲一定是，他救了我的孙女，只要我还在，就会保护你一生。我相信我的孙女也会这么做。”自这之后，老人就天天和他的孙女来到摩根的家里做客，后来摩根和他们成了邻居。<br></p>
<p>　　老人是个很聪明的人，至少在摩根眼里是这样的，他总是念叨些摩根听不懂的话，摩根还是想加入帮派，但林肯帮派的人都不欢迎他，是的，维德尔斯帮派不复存在了。<br></p>
<p>　　老人对摩根很慈祥，对他的孙女也一样，摩根和他的孙女成了同学，不过摩根很烦恼，因为他觉得这个女孩很幼稚，总是拿一些幼稚的漫画画册跟他分享。<br></p>
<p>　　“罗兰，你可以不要来打扰我好吗？”摩根总是在上课睡觉的时候听见罗兰的声音。<br></p>
<p>　　“好吧。”罗兰总是很沮丧，因为她喜欢拿自己最喜欢的漫画来跟摩根分享，可摩根对此并不感兴趣。<br></p>
<p>　　在他们成为同学不久之后，罗兰的爷爷去世了，对于摩根来说，那个慈祥的老人不会再出现了，对于罗兰来说，陪伴她整个童年的老人不会再出现了。<br></p>
<p>　　罗兰哭得很伤心，摩根也不好受，他的母亲也在老人去世当天出了意外——被人开车撞进了房子里，摩根不敢去看，他很害怕。<br></p>
<p>　　但罗兰哭得厉害，他只好去安慰她，他拿出她最喜欢的漫画，但她一把将他扔掉了，他拿出他最喜欢的棒球手套，也被她扔掉了。<br></p>
<p>　　摩根轻轻地为她擦着眼泪，直到她睡了过去，摩根轻轻地把她放在床上，为她盖好被子，靠在床尾轻轻地哭泣着。<br></p>
<p>　　摩根不再想着去当一个帮派分子了，他只想要照顾好这个比他小两岁的妹妹了，他们无依无靠了，但林肯帮派的很多人都愿意接纳这两位悲惨的兄妹，因此，摩根和他的妹妹罗兰也不至于吃不饱。<br></p>
<p>　　摩根开始到处工作，很多人都欢迎他，他也因此得到了不少的金钱，以此来维持罗兰的学业。<br></p>
<p>　　“摩根……我不要再读书了！”罗兰是这么对摩根说的，可摩根总爱说：“你要好好长大，你还要去上大学，你也不想你亲爱的哥哥劳累至死吧？”<br></p>
<p>　　罗兰很爱哭，摩根总是在她身边安慰她，有时候拿出她每天都在期盼着的画册，有时候拿出他亲手画的画，有时候拿出他做的苹果派，但最后都是摩根轻轻地将她抱起，轻轻地放在床上，并为她盖好被子。<br></p>
<p>　　罗兰也很爱笑，什么事都喜欢和摩根分享，摩根对此乐此不疲，因为罗兰是他唯一的家人了，他很愿意倾听罗兰的话，可罗兰总是说：“哥哥，你得笑一笑。”这时候摩根就会对她笑一笑。<br></p>
<p>　　他们就这样幸福的过了很久，直到某一天，战火烧到了这座城市，人们民不聊生，胆战心惊地过着日子。林肯帮派的人都是无畏的人，他们保卫着自己的国度，自己的家园。<br></p>
<p>　　“小摩根，快跑！”一位精壮的大叔对着摩根这么说道，摩根拉起罗兰的手就往码头跑——那里有等待着他们的船。<br></p>
<p>　　可战火的速度比摩根的速度快多了，罗兰总是跑不动，他只好背着罗兰跑向码头。摩根碰见了一个老头，他让老头快跑啊快跑啊，可老头却听不见他说的话。<br></p>
<p>　　摩根离码头只有十几米远了，他让罗兰快跑，自己要去救老头，但战火已经烧到了眼前，他已经看见林肯帮派为数不多的人了。<br></p>
<p>　　摩根只好放弃了，他带着罗兰上了船，穿上的人都没说话，到了晚餐时间，却没人给他们发食物。<br></p>
<p>　　“为什么我们没有食物？”<br></p>
<p>　　“孩子，我们也饿。”<br></p>
<p>　　“罗兰怎么办！”<br></p>
<p>　　“我们船上每个人都是饿着肚子的！”<br></p>
<p>　　摩根停住了。<br></p>
<p>　　“你不是英雄，我们也不是，你的父亲很勇敢，但你没有他那么勇敢。”<br></p>
<p>　　摩根想起了那天母亲对他说的话：“我不必成为任何一个人！我成为我自己就好了。”<br></p>
<p>　　“那你自己在哪？”<br></p>
<p>　　摩根沉默了，他走到罗兰身边，坐了下来，紧紧抱着她：“我不是英雄，我也没有我的父亲那么勇敢，我不是他，我以为我能守护很多人，但我发现我甚至连我的妹妹都守护不了。”<br></p>
<p>　　日子很快就过去了，他们飘落到一处海岸，走了很远才走到一户农场前，农场主收留了他们，摩根很开心，至少罗兰不用受饿了。<br></p>
<p>　　他们留了下来，替农场主干活，有一天，摩根在仓库里找到了一本漫画画册，他想要送给罗兰，因为她最近总是不开心，但这是农场主的。<br></p>
<p>　　“我想把这个送给罗兰。”<br></p>
<p>　　“你得干活。”<br></p>
<p>　　“干什么都可以。”<br></p>
<p>　　就这样，罗兰得到了摩根送她的礼物，而摩根也得到了他的工作——为农场插上柱子。<br></p>
<p>　　“摩根，谢谢你！”<br></p>
<p>　　“只要你开心就好。”<br></p>
<p>　　罗兰跳起来，给了摩根一个拥抱。<br></p>
<p>　　时间过得总是很快，摩根总在想，什么才是我自己？直到有一天，摩根在想这个问题的时候，看见了罗兰，摩根现在才知道，如果罗兰死了，那他活着就没有意义了。<br></p>
<p>　　战火来得也总是很快，没过多久，他们又走上了逃亡的路途，农场主死了，摩根从未想过他承受着这么多的事情，摩根也终于明白，他真的只剩下罗兰一个人了，而罗兰也只剩下摩根一个人了。<br></p>
<p>　　寂静无声的夜里，在繁星闪烁的夜里，在明月被炮火笼罩的夜里，他们彼此依偎，倾听着彼此的心跳声，咚……咚……咚。<br></p>
<p>　　“你不欠我的，摩根。”<br></p>
<p>　　“但你是我的家人。”<br></p>
<p>　　摩根轻轻一笑，罗兰靠在他的肩膀上，轻轻地睡着了，他想起很多——他的父亲，他的母亲，罗兰的爷爷，摩根的父亲总是缺席他的童年；母亲总爱教育摩根这个，又说说那个；罗兰的爷爷总爱一个人在书房里，不久后总能鼓捣出罗兰和摩根特别喜欢的玩意。<br></p>
<p>　　摩根想起路上帮助过他们的人，林肯帮派的勇士，收留他们的农场主，很多很多，他都快要不记得，自己是怎样活下来的了。<br></p>
<p>　　战乱来得迅猛，去的也迅猛，摩根他们躲在一个地窖里逃过一劫，他无数次听见自己的心跳声，他知道这是敌人来了，他静静地守护着罗兰，在任何人的世界里摩根并不是一个英雄，但罗兰是个意外，罗兰也不知从何开始，只想陪伴在自己哥哥身边了。<br></p>
<p>　　罗兰以前总是很讨厌摩根，因为他总是在忙，罗兰总是想哭，可每次哭出来的时候，摩根总会在她的身旁，给她讲故事，分享他的事，罗兰很喜欢听，不过他总是讲完一个故事就不讲了，因为罗兰总会在故事讲完的时候就睡着了。　　“下雨了……”摩根他们爬上地窖，雨水拍打在摩根的脸上，但摩根不觉得疼痛，因为久违的空气已经让他呆滞许久了。<br></p>
<p>　　摩根紧紧抱着怀里的罗兰，对于他们彼此来说，紧靠着的那个人就是唯一，摩根能清楚地在这硝烟过后的废墟里感受到罗兰的心跳，他们彼此的心跳是相同的，也是唯一的。<br></p>
<h1 id="待续"><a href="#待续" class="headerlink" title="待续"></a>待续</h1>]]></content>
      <categories>
        <category>短文</category>
      </categories>
  </entry>
  <entry>
    <title>我在这</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E6%96%87%E5%AD%A6/%E6%9C%9D%E5%8D%97%E6%9D%82%E8%AE%B0/%E6%88%91%E5%9C%A8%E8%BF%99/</url>
    <content><![CDATA[<p>——夜的雨夜！　</p>
<p>呐喊！　</p>
<p>不管雨水是否滴落，那管我何事！不管雨还下不下！那管我何事？　</p>
<p>我在哪？不管我在哪！我是谁？不管我是谁！我想风来雨就随着来，我想雨来太阳就跟着起来。我爱这里，在这！我可以尽情呐喊！　</p>
<p>我总悄悄然然地感觉到孤独。莫名奇妙的孤独感，恐惧感迎面而来。　</p>
<p>月亮！月亮！　</p>
<p>你为何如此匆忙？　</p>
<p>我来不及记住你的样子。　</p>
<p>也来不及记住你的名字。　</p>
<p>更来不及记住我们的故事。　</p>
<p>我竭尽所能！　</p>
<p>我竭尽全力。　</p>
<p>我想。　</p>
<p>明天的早晨……我大概会把你忘了吧？　</p>
<p>月亮照常高挂夜空。　</p>
<p>而我真的把你忘了。    </p>
<p>而后。 </p>
<p>“月亮。”    </p>
<p>而后。    </p>
<p>  “月亮。”     </p>
<p>而后。     </p>
<p>“你的名字。”    </p>
<p>“你是谁？”   </p>
<p>“而后，我在这。”   </p>
<p>总有癫狂的人说我癫狂，而后变得癫狂。我喜欢雨的节奏，我倾听自己的节奏！我在雨里竖耳，我倾听自己的声音！  </p>
<p>行星从天而降！癫狂！无比癫狂！月亮依旧平静，我依旧平静。    </p>
<p>可你的样子，我见过无数次！为什么？你遍体鳞伤！花会开吗？草会萌发？树会枯死？是什么？是月亮！是你！  </p>
<p>你是我吗？不管我事？你是月亮吗？不管我事，你是什么？都不管我事。 </p>
<p>我怎样！我才在乎！    </p>
<p>我在这！呐喊！惊叫！看月亮坠落！    </p>
<p>所以你可以告诉我。月亮是什么样的吗。</p>
<p>它的月光！它的影子！它的名字！  </p>
<p>在哪？我在这！在哪？在我这！    </p>
<p>所有的事！    </p>
<p>时间死亡！      </p>
<p>留下夜的雨！    </p>
<p>留在死亡的最后一刻！  </p>
<p>因为我在这！</p>
]]></content>
      <categories>
        <category>短文</category>
      </categories>
  </entry>
  <entry>
    <title>线条</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E6%96%87%E5%AD%A6/%E6%9C%9D%E5%8D%97%E6%9D%82%E8%AE%B0/%E7%BA%BF%E6%9D%A1/</url>
    <content><![CDATA[<p>  “首先我要说的是，对不起。”　</p>
<p>　“很抱歉，我们以这样一种方式见面。”　</p>
<p>　“你可能会骂我，为什么突然消失。”　</p>
<p>　“我无法述说,但……我会一直爱你。”　</p>
<p>　咔嚓。　</p>
<p>　“你现在在哪？”　</p>
<p>　咔嚓。　</p>
<p>　“我在路口这里等你。”　</p>
<p>　咔嚓。　</p>
<p>　“你去哪了？”　</p>
<p>  “你知道吗？我等了你好久……”　</p>
<p>  “我好想你啊！”　</p>
<p>　咔嚓……　</p>
<p>　“我知道这对于你来说是不可原谅的。”　</p>
<p>　“我对我自己也一样。”</p>
<p>　“我喜欢你。”</p>
<p>　“像风撩起你的发丝。”　</p>
<p>　“你都忘了你多美。”　　</p>
<p>  “像海，我包容你的内心。”</p>
<p>  “我一直在这里。”</p>
<p>　“我爱你。”　</p>
<p>　“我能想到的一切的一切的。”　</p>
<p>　“都是属于你的。”　</p>
<p>　咔嚓。　</p>
<p>　“下雪了。”　</p>
<p>　“不知道你在哪？”　</p>
<p>　“火炉暖暖的，像你的心一样。”　</p>
<p>　咔嚓。　</p>
<p>　“你在哪呢？”　</p>
<p>　咔嚓。　</p>
<p>　“雪下得好大啊！”　</p>
<p>　咔嚓。　</p>
<p>　“你看！我堆的雪人！”　</p>
<p>　咔嚓。　</p>
<p>　“我的信你看到了吗？”　</p>
<p>　“那是我的思念。”　</p>
<p>　“原谅我的不辞而别。”　</p>
<p>　“也原谅我不再联系你。”　</p>
<p>　咔嚓。　</p>
<p>　“你还在吗？”　</p>
<p>　“我想你了。”　</p>
<p>  “我也爱你。”　</p>
<p>　咔嚓。</p>
]]></content>
      <categories>
        <category>短文</category>
      </categories>
  </entry>
  <entry>
    <title>过往云烟</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E6%96%87%E5%AD%A6/%E6%9C%9D%E5%8D%97%E6%9D%82%E8%AE%B0/%E8%BF%87%E5%BE%80%E4%BA%91%E7%83%9F/</url>
    <content><![CDATA[<h1 id="2024-7-1-31"><a href="#2024-7-1-31" class="headerlink" title="2024&#x2F;7&#x2F;1-31"></a>2024&#x2F;7&#x2F;1-31</h1><p>我会一直爱着你,爱着你们,爱着这个世界,愿这世间无病无痛,再无悲伤.</p>
<p>我的情细水长流.</p>
<p>我想要的是一场灵魂上对话的恋爱，彼此之间灵魂交融，在心灵当中迸发出无限的欢愉。而此世间，肉欲横流，金迷纸醉，灵魂何去何从？麻木是长江大浪，翻滚灵魂跌宕起伏至成人生麻木，苦涩留恋！随即灵魂散落世间，埋没人间，随大波浪而去，从小溪流而回，里外不是人。我即疯癫！但却疯癫不成性，理智不成形，人生不成样，故事不成传奇。我秉大爱难得来此人间，看此，归去，愿你终将与爱的人相遇。</p>
<p>清脆人间歌声,</p>
<p>我们都在因为过去的美好而在坚守自身,仍然在幻想着,独留自己痛苦着,崩溃着人生,倒问自己一句?却不知梦中的人是否还在坚守承诺.</p>
<p>我一直在徘徊着。</p>
<h1 id="2024-4-1-30"><a href="#2024-4-1-30" class="headerlink" title="2024&#x2F;4&#x2F;1-30"></a>2024&#x2F;4&#x2F;1-30</h1><p>生活是一个专业,无法以一个外行人的身份去评判他人,因此,我卡在了这一步,始终是个外行人,外行人去述说一件内行事,不是记者,就是主持人.</p>
<h1 id="2024-3-1-31"><a href="#2024-3-1-31" class="headerlink" title="2024&#x2F;3&#x2F;1-31"></a>2024&#x2F;3&#x2F;1-31</h1><p>记忆随着我们抛落的沙子而坠落,我们还站在原地.</p>
<h1 id="2024-2-1-29"><a href="#2024-2-1-29" class="headerlink" title="2024&#x2F;2&#x2F;1-29"></a>2024&#x2F;2&#x2F;1-29</h1><p>不知觉间，我们都已经忘记了身边发生的无数变化，我们都开始在自己的世界里沉沦，也许我们都都已忘记该如何去对待身边的人，我们都忘了该如何去了解他们，越来越浮躁的生活，加上越来越轻蔑的世界，冷眼相待的只剩下每个精神走在时代前沿，身体却落后于时代的我们，该如何去行动？我们只会嘴炮，实际的雨落下的雨点小。</p>
<h1 id="2023-12-1-30"><a href="#2023-12-1-30" class="headerlink" title="2023&#x2F;12&#x2F;1-30"></a>2023&#x2F;12&#x2F;1-30</h1><p>你留下一个背影，将我停在原地。<br>我留下一个背影，把你困在过去。<br>你留下一个背影，我只能缅怀。<br>我留下一个背影，你不断回头。</p>
<h1 id="2023-11-1-31"><a href="#2023-11-1-31" class="headerlink" title="2023&#x2F;11&#x2F;1-31"></a>2023&#x2F;11&#x2F;1-31</h1><h1 id="2023-10-1-30"><a href="#2023-10-1-30" class="headerlink" title="2023&#x2F;10&#x2F;1-30"></a>2023&#x2F;10&#x2F;1-30</h1><p>我沉浸在过去，发了疯想找回它，可到后来，我又发了疯找回现在。</p>
<p>友人A，其实就在四月是你的谎言里。</p>
<p>逝去的无法再找回，我终究被困在了路上。</p>
<p>千里之行，山雪藏情，万分思绪，明明只身错过。<br>2023-10-11&#x2F;23:43</p>
<p>街道飞舞灯花，我亦在梦中回游。<br>2023-10-11&#x2F;23:40</p>
<p>受困千里之外，山雪之下藏情。<br>2023-10-11&#x2F;23:46</p>
<p>忍耐于泰山，方且缓解。</p>
<p>我想拥有的如今已拥有，可新的欲望又开始产生，我想做的事还没有完成，却转身抛弃一切又重新开始。<br>2023-10-29&#x2F;15:32</p>
<p>我现在虽然行走在路上，但我还是很迷茫，我不知道要去哪，不知道要怎么做，我即便知道我最后的目标是什么，又该怎么去完成。</p>
<h1 id="2023-9-1-31"><a href="#2023-9-1-31" class="headerlink" title="2023&#x2F;9&#x2F;1-31"></a>2023&#x2F;9&#x2F;1-31</h1><p>要做时代洪流的新星，还是洪流的缔造者？<br>22:52</p>
<h1 id="2023-8-1-30"><a href="#2023-8-1-30" class="headerlink" title="2023&#x2F;&#x2F;8&#x2F;1-30"></a>2023&#x2F;&#x2F;8&#x2F;1-30</h1><p>时间就是这样慢慢地过去了，你是，我也是，也许我所做的一切都是自我感动，悲催。<br>2023-08-03<br>23:06</p>
<p>我希望有一天我可以释怀一切，或者我可以死去，或者我可以疯掉傻掉，我想去逃避现实，但我知道我也许永远也没法做到了，所以我想献出我的生命，献出我的一切去拯救生命，或者，拯救。<br>2023-08-03<br>23:09</p>
<p>东西就放在那里，它跑不了，现实就放在那里，它跑不了，我就站在这里，我跑不了。<br>2023-08-03<br>23:11</p>
<p>我永远也无法改变过去，成为过去，我只能往前走。<br>2023-08-03<br>23:11</p>
<p>我老是想起从前，这明明已经是新的开始了，我想我需要一些时间。<br>2023-08-05<br>09:25</p>
<p>我将奔赴末日，述说这世界最后的独白。<br>2023-08-05<br>10:26</p>
<h1 id="2023-7-1-31"><a href="#2023-7-1-31" class="headerlink" title="2023&#x2F;7&#x2F;1-31"></a>2023&#x2F;7&#x2F;1-31</h1><p>我决定重拾过往的一切，抛弃的。</p>
<p>这是一个轮回，我永远也无法摆脱的轮回。</p>
<p>有时候我无法解释我所做的一切到底有什么意味，我的想法一直很混乱。有时候这种混乱的想法导致我想的太过于全面，甚至已经到了一种我自己都无法想到这么做还有这种功效，有时候又太过片面，甚至片面到我无法察觉。</p>
<p>我对过去已经有一个疯狂一般的执着，不为什么，那时的我早已猜到了结局，而我却依旧莽撞下去，也许正是我的莽撞，才导致了这样的结局。<br>2023-07-26<br>23:05</p>
<p>别离无声，我爱这一切。我要写一首情诗，给予我爱的一切。我要写一封遗书，给予我爱的一切。<br>2023-07-26<br>23:09</p>
<h1 id="2023-5-1-31"><a href="#2023-5-1-31" class="headerlink" title="2023&#x2F;5&#x2F;1-31"></a>2023&#x2F;5&#x2F;1-31</h1><h1 id="2023-4-1-30"><a href="#2023-4-1-30" class="headerlink" title="2023&#x2F;4&#x2F;1-30"></a>2023&#x2F;4&#x2F;1-30</h1><h1 id="2023-3-1-31"><a href="#2023-3-1-31" class="headerlink" title="2023&#x2F;3&#x2F;1-31"></a>2023&#x2F;3&#x2F;1-31</h1><h1 id="2023-2-1-28"><a href="#2023-2-1-28" class="headerlink" title="2023&#x2F;2&#x2F;1-28"></a>2023&#x2F;2&#x2F;1-28</h1><p>去你妹的。</p>
<h1 id="2023-1-1-31"><a href="#2023-1-1-31" class="headerlink" title="2023&#x2F;1&#x2F;1-31"></a>2023&#x2F;1&#x2F;1-31</h1><p>过多羡慕别人也没用，那不是你的，看好当下，才是真的。</p>
<h1 id="2022-12-1-31"><a href="#2022-12-1-31" class="headerlink" title="2022&#x2F;12&#x2F;1-31"></a>2022&#x2F;12&#x2F;1-31</h1><p>一个人的意识形态一旦定了形，那想要再改变就难了。小时候我们可能一天变一个样，慢慢长大后改变得也就慢了，到最后坚定地认为一些事情是绝对的。除非这个打破世界观的事情就发生在眼前。</p>
<h1 id="2022-11-1-30"><a href="#2022-11-1-30" class="headerlink" title="2022&#x2F;11&#x2F;1-30"></a>2022&#x2F;11&#x2F;1-30</h1><p>你为何而爱着这个世界？这世界有很多人，地球能给你的只有你脚下的寸土尺地，为何呢？也许是我们还有太多东西没有见过罢了。</p>
<h1 id="2022-10-1-31"><a href="#2022-10-1-31" class="headerlink" title="2022&#x2F;10&#x2F;1-31"></a>2022&#x2F;10&#x2F;1-31</h1><p>我最不怕的就是卷土重来，简单点来说，就是重头开始。　</p>
<p>我知道重新开始的难度很大，不管是游戏生活，亦或是现实人生。</p>
<h1 id="2022-9-1-30"><a href="#2022-9-1-30" class="headerlink" title="2022&#x2F;9&#x2F;1-30"></a>2022&#x2F;9&#x2F;1-30</h1><p>偶尔出现的孤独，让我不至于觉得这个世界未曾没有希望。　</p>
<p>但愿如此，即便是我们一起说的再见，我也愿意相信我们还有再相见的那一天，简单点来说，我愿意相信我们缘分未尽。　</p>
<p>如今的味道越来越淡了，虽然我的味蕾不管是酸辣麻辣亦或是甜到牙疼或是咸到苦涩，即便我可以每天去任意一种火锅店小吃店等等等等。可我还是尝不到一丝年味。</p>
<h1 id="2022-8-1-31"><a href="#2022-8-1-31" class="headerlink" title="2022&#x2F;8&#x2F;1-31"></a>2022&#x2F;8&#x2F;1-31</h1><p>时光走得太快了，我傻傻地站在原地不知所措，只能呆呆地看着你的背影。　</p>
<p>愿！一切依旧安好：沐风诉雨的你，还在吗？我想我不再了。哈哈哈，我想以后就该安心下了，至少每天都精彩的日子不会再有了。　</p>
<p>事实证明，我没有了耐心，当然了，也没了勇气，世上解脱的人都拥有的两种品质，都不在我这了。也许是我太烦躁了吧，再没有那个心情了。　</p>
<p>我无法接受的是，在每天的记忆里看着自己消沉，然后一分钟热度。最后把一切放弃。　</p>
<p>所以，我选择放弃现有的一切，去追寻未知的旅程。　</p>
<p>总有比今天更烦的一天，也许是明天，或许是后天，谁知道呢？　</p>
<p>一个人的一天，除了睡觉吃饭工作学习，就足以填满一整天，而一堆人的一天，有时莫名空虚，有时却过分充满，心情起起伏伏。　</p>
<p>离开不算什么，认真的告别对于一个普通朋友来说，也许很快便会遗忘。而不告而别的人，却总会记住你的样子。　</p>
<p>其实一年一年地过去，我们是否问过自己是否充实过？学会了什么，得到了什么？害怕失去吗，对于到来会不会惊喜？我们都没有答案，也许一件小事也是可以当做学会呢？就像你学会打响指？也许一条祝你生日快乐的信息也算得到呢？如果打碎一个花瓶，也算失去呢？你是否害怕？也许那个你一直苦苦等待的人回到你的面前，你是否还会惊喜呢？　</p>
<p>假若我们有很多很多的未来呢？就像无数个平行时空，是否我们会一直幸福美满？或者流浪街头？既然不知道，那当下便是最好的，要努力改变它，而不是去想象某个世界里有自己向往的样子。　</p>
<p>习惯夜晚之后，白天就会显得十分烦躁，只有夜晚降临，真正的寂静无声时，才会安静下来，也许这时候，你不再烦躁那讨厌的汽笛声，而是无比期盼有人还在陪着你。那既然如此，为何不试着接受？而不是烦躁一切，掩盖真正的内心，这样永远也走不进白天，也永远无法有人与你相伴至黎明。</p>
<h1 id="2022-7-1-30"><a href="#2022-7-1-30" class="headerlink" title="2022&#x2F;7&#x2F;1-30"></a>2022&#x2F;7&#x2F;1-30</h1><h1 id="2022-6-1-31"><a href="#2022-6-1-31" class="headerlink" title="2022&#x2F;6&#x2F;1-31"></a>2022&#x2F;6&#x2F;1-31</h1><p>离开也许才是最好的答案，按照我目前的情况来看，我的世界里容不下其他人，我没精力也没时间了，仅仅半个月的压力下，我就残破不堪了。等我回来吧，一定会的。　</p>
<p>相遇最可怕的不是遇见，而是即便他不在你的身旁，你依旧在脑海里看见他的面庞。　</p>
<p>谁都知道下雨天要躲雨，但现在我只想当一次神经病。　</p>
<p>我一定要开心！　</p>
<p>人哪有那么多的结局，留下的不过是一个又一个荒诞的故事，以及无从揣测的未来。活在当下就好。　</p>
<p>我宁愿掩埋一切，以此来换取我我已然为数不多的时间。</p>
<h1 id="2022-5-1-30"><a href="#2022-5-1-30" class="headerlink" title="2022&#x2F;5&#x2F;1-30"></a>2022&#x2F;5&#x2F;1-30</h1><p>我身处绝境，我义无反顾，我消散云烟，我萧瑟秋风随雨而去。　</p>
<p>原谅我，我在时光的间隙里看着你的离去，只因我身陷困境，只因我不敌时间，只因我丧失勇气。我该怎么做，才能挽留你，我知道我没了勇气，从始至终都是这样。我想有一天，会有一个从天而降的意外让我充满勇气，但我想这一天也许永远不会到来。　</p>
<p>每次回想以前，我都发现以前的自己有着非常超前的意识，我总在以前留下的只言片语中看到如今的自己，可就是这样的意识，却没有勇气，却不知道怎么做。　</p>
<p>我是梦境，我是幻想，我是夏日秋风里的寒冬，我是山川奔涌江流流向的雪山之巅，我是岁月流淌记忆湖泊的松柏。　</p>
<p>我不清楚在雨夜的时候我该怎么办，我只是依照我的本心来做，我的本心是什么样的？像个傻子一样在雨里慢行吗，还是在我自己看来开心快乐地活着？　</p>
<p>做人一定要疯，做人一定要傻，不然会错过很多。会错过很多明明值得记下来的一切，明明可以一起分享的一切，明明能够回忆的一切。却只能在脑海里不断浮现，只能在脑海里后悔，然后再次抬起头，再次失去一切。　</p>
<p>人们总是悲剧的，也是喜剧的，因为他们总是悲观的，却也是乐观的。　</p>
<p>我还有多久？我总是试着这么说，我想时间不多了，眼下我要考虑的已经不是玩什么，怎么玩了。我深知我的处境是怎样的，我没有老师，我的身前满是迷雾，但我的身后还有着人，我只能成为自己的老师，以及别人的灯。幸运的话，我会遇见别的灯，那是被留下的灯。　</p>
<p>原谅我吧，对不起。我的处境并不好，我在我的麻木中走向深渊，如今我醒悟，但时间来不及，也许我的时间不久，可我的身后还有绳子，我的前方还有峭壁。我停留不下，只能在一旁祝你幸运。我只能成为一盏灯，一盏只能照亮我的自己，照亮身后绳子的灯。我别无他法，对不起。　</p>
<p>我不去想谁会离开谁会回来，因为我知道想离开的我再怎么挽留也留不住，想回来的我再怎么赶也赶不走。我只需要安静地等待着，给予人生一个乐趣，猜猜下一个离开的人是谁，下一个回来的又是谁？　</p>
<p>我是个很不好的人，细数我犯下的罪证，留下的是散不开的阴霾，笼罩着每一个被我伤害过的人，同样的，我的头上也充满着阴霾。我是个仇视的人，所以我去报复社会，可也只有我自己才知道，那片阴霾同样是别人所带来的。　</p>
<p>我独在暗中寻找光亮，在花已凋零的地方，脚下的关卡阻挡我奔向你的方向。再一次的，在每个关卡摔倒，在下个关卡再次消亡。再一次的，凝聚信念，破晓希望。　</p>
<p>我在黑暗中独自走向前方，可这满天的阴霾，可这遍地的凋零，我不再走向前方，我要留下，成为太阳，照亮整个世界。</p>
<h1 id="2022-4-1-30"><a href="#2022-4-1-30" class="headerlink" title="2022&#x2F;4&#x2F;1-30"></a>2022&#x2F;4&#x2F;1-30</h1><p>没有好的机会说再见，云端下凄美的蓝天里，我的想象里，在绿的叶里，在艳的花里，我们之间的距离只是相差了一个故事，却走了好远。「根据《从你的全世界路过》暖听改编」　</p>
<p>没有好的机会说再见，雨雾下我却没了机会再一次，再见到你。　</p>
<p>无数的过往里，我都将是路过的路人，不是因为什么，只是我再也没了勇气，成为一个人的红灯。　</p>
<p>我知道我没法挽留这一切，我知道过不了多久，我们就会一花开两瓣，天各一方。或许某一天，蚂蚁会从这一瓣，走到另一瓣，可蚂蚁做不到，做不到让时光倒流，我们再也回不到，回不到盛开的时候，回不到萌芽的时候，回不到破土而出的时候。　</p>
<p>我该怎么挽留你，我该怎么爱着你，我该怎么像雨水，我该怎么像大海，我该怎么像夕阳，一样挽留你，一样爱着你。　</p>
<p>我的眼里常有色彩，那是浮尘于世间万物之前的色彩，我看不清事物本身的样子，但我同样拥有着独属于我自己的世界。「2022年4月9日23:31」　</p>
<p>我的眼里常含泪水，所有的一切就像浮生若梦一般梦幻，我的世界里常含着你，就像梦幻的梦境里出现了梦幻一般的你。「2022年4月9日23:36」　</p>
<p>我的眼里常含故事，这是我自己的故事，每个人都有着自己的人生自己的故事，而我的故事是只属于我自己的。「2022年4月9日23:40」　　</p>
<p>我的眼里常有影子，不论多远的事都有它的影子，或是门前的小路，或是林中的小溪，不论大的小的事，它的影子一直都伴随着我。「2022年4月10日01:42」　</p>
<p>我的眼里常有迷茫，总有的人在我的眼里发现迷茫，就连我看镜子里的自己，都发现了它；我想是因为我总想要记住所有的事，所有的人，所有的东西，所有的风景，所有的旅途，但如今看来好像忘记，或者淡忘它们也挺好的，至少我不用为了几年的糗事而发愁。「2022年4月10日01:48」　</p>
<p>我喜欢你，不单单是因为喜欢你，更多的是春风时有你，夏热时有你，秋收时有你，冬暮时依旧有你。　</p>
<p>真真假假，假假真真，又要论那么多真假做什么。　</p>
<p>我原以为我能回到过去，回到那段我曾做错过无数次的时光里，我一直在后悔，假如我有勇气，可我连假如的勇气都没有。　</p>
<p>拿不走的留不下，留不下的别牵挂，我原以为我能回到过去，回到那段我曾做错过无数次的时光里面，再让我挽回一次，至少不用再纠结。　</p>
<p>时间煮雨，我曾想感叹时间的过往，也曾想凝望岁月的沉寂，但这一切貌似不是我能感叹，不是我可以凝望的。　</p>
<p>我为草地流泪，草地送我芳香，我为花朵流泪，花朵送我风华，我为岁月流泪，岁月送我黄昏诗歌，我为世界流泪，世界送我人间繁华，我为自己流泪，我送自己梦幻笑容。　</p>
<p>我一直在避免着遗憾，可遗憾是没有办法避免的，也是没有办法知晓的。</p>
<h1 id="2022-3-1-31"><a href="#2022-3-1-31" class="headerlink" title="2022&#x2F;3&#x2F;1-31"></a>2022&#x2F;3&#x2F;1-31</h1><p>世界本就在下雨，不必太刻意，也无需太在意。 </p>
<p>我相信一念花开，也相信花开花落。　</p>
<p>我好像不愿再去接受这个世界本来就属于恶的一面，我好像不敢再去面对这一切了。　</p>
<p>时间就像错乱的摆钟，有时候太快，有时候太慢，有时候停下了，我们还要拾起电池，安插在记忆的口上。　</p>
<p>一辈子有多长？一百年吧。一辈子有多短？一百年吧。　</p>
<p>不为谁而作的歌，不为谁而写的诗，不为谁而流的泪，也不为谁而去的远方。不为了谁，我只为了我自己。　</p>
<p>就像花不会枯萎，树从萌芽的那一刻就已经注定了结局，你我美满的人生从来不存在起点终点，只在某一天某一刻明白，这不过是一个轮回，美满一生，贫苦一世，就像诗和梦，美好的幻想终有戳破的那天。「2021&#x2F;10&#x2F;27」　</p>
<p>把梦都揉碎，放进记忆的垃圾桶里，把过往揉碎，放进记忆的垃圾桶里，把自己揉碎，放进记忆的垃圾桶里，等着垃圾车的到来，等着你的出现。等着……等着你慢慢拼好这一切，再把我的一生都给你。　</p>
<p>把梦都揉碎，放进蔚蓝色的温柔里，把过往都揉碎，放进青绿色的治愈里，把自己都揉碎，放进夕阳下的晚风里。等风把一切都吹走，吹到你的面前，等你把一切都拼好，再把我的一生都送给你，送到你的心房里。　</p>
<p>把梦都揉碎，放进蔚蓝色的温柔里，把过往都揉碎，放进青绿色的治愈里，把自己都揉碎，放进夕阳下的晚风里。等风把一切都吹走，吹到山野里，吹到河海里，吹到你的心房里。　</p>
<p>把梦都揉碎，把过往都揉碎，把一切都揉碎，放进蔚蓝色的温柔里，放进青绿色的治愈里，放进夕阳下的晚风里。等风把一切都吹走，等夕阳把时间都带走，等治愈把世界照亮，等温柔把梦轻轻唤醒，再慢慢睁开眼，再一次看见你。　</p>
<p>如果你在看自己的过往，不要惊慌，也不要彷徨，那都是你曾拥有的，即便是现在，也在拥有着的。　</p>
<p>假如你找不到自己了，那不妨试试找到曾经的自己，也许你就在日记里，也许你就在相册里，也许你就在记忆里。　</p>
<p>童真的自己总是令现在的自己向往，那不妨成为一次自己，成为以前童真的自己。把童年的目标再树立一次，再向着这个目标努力一次，哪怕做不到，但你已经是那个令自己向往的人了。　</p>
<p>我是旧时代的残党，我是旧世代的平庸人，我不是新世代的领军人，也不是新时代的工人。我不是任何新时代的人，对于我来说，我的时代远在十几甚至几十年前，今我只是我自己，不是任何人。　</p>
<p>我是旧时代的残党，是旧世代的平庸人，我不是新世代的领军人，不是新时代的工人，我的时代早就在十几年前消散云烟了，我只是一个普通人，我只是我自己，我也只愿意成为我自己了。　　　　</p>
<p>距离：　</p>
<p>某一天，也许是某个阳光明媚的一天，我突然早起了很多，清晨的时候就如此坐在躺椅上，慵懒惬意的阳光照在瓷砖上，照进厨房里，我有多久没见过这样的情形了？我翻看着自己的日记，很可惜，没有找到，于是我写下了这一刻，写在了我的日记里。　</p>
<p>我生了很大一场病，一场只有我一个人与病魔博弈的病，我不断地提起这场博弈，又不断地放下这场博弈，我知道我还没有好，我一个人斗不过它，我一直在成长，现在看来，我已经能和它打个平手了，我相信不久以后我会不再在意这一切，不再提起这一切。　</p>
<p>某一天，也许是某个阳光明媚的一天，我翻看着自己的日记，我有点迷茫，有一些烦恼，我喜欢自己跟自己对话，跟过去的自己对话总是有收获的，跟未来的自己对话也总是期待着的，所以，我看到了这么一句话:　</p>
<p>“时间的束缚得以让我享受人生，也同时让我悲叹人生。”　</p>
<p>我恍然间好像知道了什么，心里的锁突然间打开了，像是过去的自己给未来的自己留了一把钥匙，我不再去理会迷茫，不再去烦恼，我开始寻找自己的足迹，寻找自己曾努力过的目标，重新努力一次。</p>
<h1 id="2022-2-1-28"><a href="#2022-2-1-28" class="headerlink" title="2022&#x2F;2&#x2F;1-28"></a>2022&#x2F;2&#x2F;1-28</h1><p>雨里的夜?或是夜里的雨，我记不清了，我只是在热水溅起水花之前听到的。那个地方是什么样子的，我想也许就跟梦里一样，至于是哪个梦，重要吗?就像如今的情况，我不清楚一切，正如我不清楚我什么时候离开。　</p>
<p>如果你一定要一个答案，那这个答案就是没有答案。   ——付木　</p>
<p>也许我只剩下一天，也许是几年，我珍惜我所拥有的一切， 但并不想让任何人来珍惜我。我从来都不是一个赌博客，但我不得不去赌上一切，赌上我的人生，赌上我的故事，我也赌上了你，可你从未转身回头，我也赌上了我自己，可我从未看见明天。　</p>
<p>我喜欢让每一首歌都有着独属于它的故事，我把这些故事写下，在结尾处加上歌的名字，这就是我的青春。　</p>
<p>突然发现一切都快要过去五年了，有时候我真的后悔了，如果五年前我没有离开，也许一切也就不一样了，我还记得我躺在海滩上，看着爸妈，看着爷爷，看着哥哥，像是一把锁了千年的锁恍然间就打开了，我快要什么都不记得了，我记得的只有我莫名其妙掉下来的眼泪，还有快要昏沉过去的耳边的歌声，那是我找了五年的歌声。2017&#x2F;8&#x2F;23模特&#x2F;李荣浩　</p>
<p>愿一切都能像落日，不再被打扰，不再卷入任何一场梦里。是时候该放下了，放下所有的一切，好好做一回自己了，不需要再编造任何一个谎言，也不需要扮演另一个人，不需要一半真也不需要另一半假。不要沉浸在回忆里了，本就是遗憾的，再也挽回不了的，也该抬起头去看一看前方了。自2022&#x2F;2&#x2F;15日记。　</p>
<p>顾安也要走了，有时候我会受不了他，但现在才发现，你走以后我就真的只剩下我一个人了，我不清楚这是什么样的感觉，可当凌晨夜市里身旁没了你，也没了坐在对面看着我狼吞虎咽的你，我才知道自己是怎样的孤单。我又回到那段浑浑噩噩的日子里了，我决定给我一些时间，也许是一天，也许是一个月，也许是一年，到底有多久?谁又会知道。对了，也许给我的消息已经很久没有回复了，那应该是我已经走了。离开和分别不一样，离别也不一样。我只记得那天我们聊到了凌晨三点，他说了很多话，第二天一早就走了，我不知道他有怎样的决绝能支持他独自一人，但我知道我也有这样一天。我喜欢叫他故安，至于为什么，也许在他出现之前，我就这样的名字吧。故，依旧安康。离开是义无反顾的，分别是惺惺相惜的，但离别是需要看着你的眼睛，说再见的。2022&#x2F;2&#x2F;1718:09　　　</p>
<h1 id="2022-1-1-31"><a href="#2022-1-1-31" class="headerlink" title="2022&#x2F;1&#x2F;1-31"></a>2022&#x2F;1&#x2F;1-31</h1><p>我们都会在某一刻长大，都会在某一个瞬间，想起曾经的无所适从。都会在花落前，想起花开的辉煌，想起发芽的稚嫩，想起花衰的感慨 想到花落时的释然。我们都有过梦，都想在春天是绽开，都想在夏天时听雨声淅淅沥沥，都想在秋天时看夕阳下海霞红，在草原，在雪地，在丘陵，在山川，在江流，在汪洋，在一切的一切前，留下的那唯一的痕迹。都会在冬天以一个纯白纯净的心灵，迎接新的春天。　</p>
<p>我们都有自己的人生，都有属于自己的星光，但……也许是我走错了世界，也许是我开错了房门，我的星光却迟迟没有出现，也许它就在我身旁，也许它在夜空里，可它像是害羞的花，不愿出现。秋风细雨的时候，你也许就在我的身边，寒风凛冽的时候，你也许就在我面前，你在这里看着我，像我想着你一样。　</p>
<p>我终究是回不去了，我曾以为只要我努力回忆过去，就能变成以前的自己，你也能和以前一样，我也能像以前一样。　</p>
<p>有时候我宁愿让时间去治愈所有的伤痛，而不是我自己，逃避现实带来的最后往往都是去面对事实。　</p>
<p>有时候我更宁愿让时间去治愈一切，而不是我自己抚平这一切，我曾想要用时间的岁月流逝来治愈我的光阴消散，可后来才发现，即便治愈了我的内心，那也是让我不再想起这件事，真正治愈我的，也许是那并不美好的童年，也许是那并不快乐的青春。　</p>
<p>当故事有了南墙，我撞了，没有再回头，民国几十年，城中人曲中戏，都唱那一繁花，城南繁花遍开。树中雨梦中幻，都现那一云浪，树前云浪尽显。月中明书中词，都述那一星河，月下星河倾见。　</p>
<p>如果你真的明白这首诗歌的意思，你就不会接受我，我只是在你需要安慰的时候恰好出现而已，你并不喜欢我。林间的山风吹不到大海对岸，树下的落叶飘不到窗前，雨水也滴不到屋檐下，我爱着你，永远都爱着你，可山风只能融进海水里，只为了海浪抵达你面前时看你一眼；落叶只能飘落的时候，在空中匆匆而忙忙地胡乱飘舞，只为了吸引你的注意力；雨水只能在滴到屋檐的时候，溅在地面的时候，轻轻地拍打着你的裤脚。所以，我爱着你，只是我的一厢情愿，永远都爱着你，也是如此。我最后悔的事，就是没能跟你道歉，如果你还可以看见的话，我一定会奋不顾身地奔向你。</p>
<p>你后悔吗，我想我也许后悔了，你知道我曾以为我是一个故事很多的人，该怎么说呢，以前觉得门前的路很宽，院里的树很大，天上的鸟飞得很高，可后来离开了家，才知道门前的路很窄，院里的树很小，天上的鸟飞得很矮，我的故事很少……很少。　</p>
<p>这是我最后的故事，是我最后的告别，我和你一样去过很多地方看过很多风景，我和你一样有过很多很多梦想很多很多想法，我和你一样有着属于自己的救赎，我不是一个恶人，也不是一个好人，我不觉得我会为了一个人奋不顾身，但我还是做到了，这就是我的救赎。</p>
<h1 id="2021-12-1-31"><a href="#2021-12-1-31" class="headerlink" title="2021&#x2F;12&#x2F;1-31"></a>2021&#x2F;12&#x2F;1-31</h1><p>离别总是来的很突然，来不及再见一面就消逝在茫茫人海。　</p>
<p>望了眼天空，夕阳的余晖照在窗前，映射在书桌上，黄昏的落叶随着晚风离去，凄凉的夜晚里，我举起了手，月光透过缝隙照进我的眼睛，也许有时候就是这样，我们都会看着夕阳的落下从而迎接着月光的到来，我们也许只是沧海桑田里的一根不起眼的草，比不上什么明珠，但我们也有属于自己的日晒雨淋。　</p>
<p>我希望人生能像山间林下的风一样清爽，我希望故事能像山巅云上的风一样自由，我希望有一天我能像阳光包容世界一样包容你，我希望有一天能像永不退歇的海浪一样爱着你，我希望有一天我能像比翼飞行一样和你同行，我希望有一天我能像你看着我一样看着你，我希望有一天你能像我爱你一样爱着你自己。　</p>
<p>诗的结尾就像残阳的霞云，月的山林就像湖水的涟漪，星的深谷就像故事的末尾，你不存在于我的梦，我也不存在于你的心。　</p>
<p>岁月长满了双手，昼夜也不及眼神的黯淡，年少轻狂的光彩也在时间的催促下消磨，光阴的落叶在此刻铺满山川河海，年华似水般的梦匆匆流过，书所至的人好像也在治愈童年的路上所离开了。　</p>
<p>未来就是跟春天绽开的花说再见，跟秋天盛开的果说你好，未来就是跟昨天的你说再见，跟今天的我说你好，未来就是跟死去的你说再见，跟出生的我说你好。　</p>
<p>冬天飘落的雪也盖不住时间的消逝，光阴的消散，岁月的痕迹，　</p>
<p>散落星河中的花，像流星般飞过眼前，直到彻底照亮夜空。照亮前方的归途。　</p>
<p>早已经消逝的门，早已经干涸的河，早已经不再奔涌的江，早已经消散的云烟，早已经停转的钟摆，都在说着，述说着那不在存在的故事。我曾凝望时间，我曾散入过往，我曾在江边看到坠入星辰的河，我曾在一切的开端，打开故事的门。　</p>
<p>海上孤帆漂流的小船外，是海风带来的唯一和声，是海浪带来的唯一鼓点，是云际之下海鸟带来的唯一歌唱。　</p>
<p>如果早一年该多好啊，如果早一年，我就不会遇见你，我就不会遇见你们，我还会在尖子班，我还是那个默默无闻的人，我还是那个沉默寡言的人，我也不会再写任何东西，我只是在茫茫人海中，所最普通的那个人，不再散发任何光芒，不再有任何值得，不再有离开，也不会再有遗忘，一切都会不一样，一样的只是我们，只不过缘分的线再也布不满山川河海，再也布不到远方的天，再也布不到我们的身边，我们还会和以前一样生活着，只不过生命中你所离开了，我也不曾再见了。　</p>
<p>我曾看见未来，可我不相信未来，我曾遥望过往，可我却记不起过往，我曾凝望岁月，可岁月却来不及拥抱我。　</p>
<p>烟花的火光照亮了整座孤寂的城市，也照亮了我心中的海洋。　</p>
<p>也许我们都是疯子，也许我们都曾在日落中的人海里与夕阳共同书写着带给远方无尽遥远的故乡，在星辉夜晚里，我们也曾在冷风中明白一件又一件的事，尘封一段又一段的过往，也许汪洋大海里所漂流的书信，会被彼岸的人们收到，至那以后，我们的故事，再也不会被尘封成过往。　　我们的每一秒都是故事，每一分钟都可能会有结局，也许和电影的结尾一样，当背景音乐出来的时候，就是我们的结局。　</p>
<p>故事到底是怎样的，早就没必要了，我只知道在汪洋里，再也不会有他们的身影了，我也只剩下了一叶孤舟。　</p>
<p>我相信有一天光阴落下的树叶上会带给我答案，岁月吹起的风会把我带到时间的车前，带我看遍日落日出，看遍山川河海，看遍霓虹灯照耀的城市，看遍朝朝暮暮无尽反复的人生，还有黑夜前还在等待着黎明的我们。　</p>
<p>我不再寻找答案，我开始相信童话下美好的故事，我开始不再想念诗篇，不去想起那些过往，岁月尘封了过往，直到再也看不到烟火下你的身影。　</p>
<p>比起别人的谎言，我更愿意相信谎言下的童话。　</p>
<p>我现在还不算孤独，至少我还有人陪着，但孤单已经到了，孤独也不远了。　</p>
<p>你的脑海里还存在着变为废墟的城市吗，那里还会有桃花绽开，枯萎，凋零吗，是否还有海风吹过你的脸颊，还会不会听到海浪的声音啊，　</p>
<p>后来的故事里，没有了你们的身影，在变为废墟的城市里，也许还残存这我们曾经的时光，也许还有着我们岁月留下的痕迹。　</p>
<p>大海淹没了海崖，淹没在了城市里，淹没在了乡村里，淹没在我的记忆里，尘封在了海里。　</p>
<p>夕阳从海平面升起，我只剩下一叶孤舟，在梦里，在臆想里。</p>
<h1 id="2021-11-1-30"><a href="#2021-11-1-30" class="headerlink" title="2021&#x2F;11&#x2F;1-30"></a>2021&#x2F;11&#x2F;1-30</h1><p>也许我们都曾为了一个人奋不顾身，也许我们都曾热泪盈眶，也许我们都曾感叹这世间万物蹉跎的岁月，也许遗忘了过去，也许扑灭了未来，也许不曾有了希望，也许不曾有了方向，或许花会凋零，草会枯萎，或许鸟儿会哭泣，可我们依旧会看到，看到那个理想的世界。愿你我还会在路灯下相遇，走过一段人生，愿你我不再把思绪掩埋，希望在山巅相遇的时候，你我依旧单纯如纸，热血澎湃，仍然是少年。　</p>
<p>也许最痛苦的事就是不知为何而哭，不知为何而笑，不知为何而思念，不知为何而憧憬，不知为何而出神，不知为何的过往，不知为何的人生，就像花不知为何凋零，草不知为何枯萎，树不知为何遮风，叶不知为何挡雨，　</p>
<p>故事终会有结局，可我们就像是把这故事续写一般的存在，也许某个不经意间还会记起年少的自己躺坐在沙发上侧过头看着清晨的阳光照射进来的感慨，或者是恍惚的瞬间记起晚风袭起衣角的那一刻，我们始终都在成长，得到的越多，失去的也就越多，也不过是每个人都想要忆起的那些逝去的时光。　</p>
<p>依旧是辗转难眠，有时候不必去证明些什么，不必去在意些什么，就像每个人的乡愁给予的苦恼，既不会摆脱，也不会舍得。　</p>
<p>我们都曾迷茫过世间，我们都想看破这世间，可有时候看到的不是真相，只是一个人，一群人对于世界的只言片语，也不曾有人说看破红尘，看破红尘的人早已经不在意红尘在哪，不必彻底听从一个人的看法，始终都要做回自己的。　</p>
<p>温暖的阳光从窗口照在了我的心上，天边无际的云好似靠近了那么一些，再也没了那么多烦恼与忧愁。清晨的雨有些微凉，寒风凛冽吹的我有些打颤，昏沉的天空下，行人匆匆，街道边的小摊贩也在急忙收拾东西，一切都如同灾难来临，可我心里再无其他杂念，　</p>
<p>清年的山已经被山雪覆盖了，逝年的故事已经被封藏进土了，无疆的你我也消散入云烟了，不论是梦，还是幻镜，亦或是现实，都已经结束了，从此以后的故事也不需要再多说了，只可惜离开的这一天，只剩下我一个人在祷告。　</p>
<p>“告别的时候，要用力一点，指不定你多说一句，就是最后一句。弄不好你多看一眼，就是最后一眼。”   ——《后会无期》　</p>
<p>后会无期，后悔也无期。</p>
<h1 id="2021-10-1-31"><a href="#2021-10-1-31" class="headerlink" title="2021&#x2F;10&#x2F;1-31"></a>2021&#x2F;10&#x2F;1-31</h1><p>我始终是回不去了，但好像没有那么糟糕，我依旧感到开心，即使我记不清我的过去，即使我忘不掉过去，即使我推不开他，与其揭开过去的真相，在过去痛苦，不如把它放在一边，不在意自己是谁，不在意别人是谁，也不需要一个真相，重新面对现实，不再活在过去，也不活在幻想，认真对待每一天，这就够了，就算得不到慰藉，得不到关心，只在迷茫中摸索前行，即使结果是四处流浪，但我也认真过了每一天，我已经满足了。　</p>
<p>我们终会长大，可火车早已经在我这里停下，我永远止步不前，而你们只会向着远方前进，我会叹息，孤身一人的感觉并不好受，可我们不就该如此吗。　</p>
<p>春风吹过晚霞，夕阳终会升起，也迟早会落下，可开始的人生其实不尽相同，有的人早已经迷失在夕阳中，有的人无暇顾及夕阳，它很美也很致命，沉沦在美梦并不致命，致命的永远是清醒的美梦。　</p>
<p>倾听戏中百年间，残年终是回首间。　</p>
<p>我始终避免不了我自己，我在害怕自己，我意识到正视自己带来的其实更多的是痛苦，但如果我能挺过去那么也就不在乎了，可我喜欢逃避现实，清醒的堕落在梦里，永远活在自己的幻想当中，我可以做出改变可是改变带来的一切都让我感到陌生，我早已经跟不上一切了，我只会坐在夕阳前感叹着人生苦短，可又有什么用，我早就知道我自己跳不出来了。　</p>
<p>你我之间，其实早就没有了隔阂，你可以当成我，我也可以去变成你，可现实就是这么奇怪，我逃避着现实，放着一切而不顾，否定任何人，嘴上说着不忘初心可自己都不记得初心是什么了，我只会慢慢变成一个自大且虚伪的人。　</p>
<p>我认清不了现实，我只认清自己，就好像我现在的一切都像是另一个人的人生，我的人生早就迷失在黑夜中了，我想去改变可是我发现我的虚荣心永远在作祟，我的胜负欲永远在提醒我要赢，我知道我可以改变这一切，我可以变成我的以前，可我还是不甘心，为什么我要变成这样，我的初衷到底是什么，我到底为了什么而改变，我意识到我错了，我只能在夕阳下认清自己，认清现实。　</p>
<p>过往如何，现实又如何，都无法改变了，蛛丝马迹早已经在时间长河中消逝不见，忘掉又如何，记起又如何，只不过是变了个人，再重新流淌过一遍人生罢了。　</p>
<p>我以为你已经走了，可又一次刺痛刺醒了我，有时候我甚至出现了错觉，好像每一刻你都在，而我只能感受到细微的你，每当我以为要结束的时候，你却又出来告诉我事情远远不止于此。有时候真可笑啊，伴我成长的居然一个让我痛苦不堪的伤病。　</p>
<p>命运如何，记忆又如何；孤独怎样，落寞又怎样，再也不用去在意了。与星空为伴，黑夜并不好受，与烈日狂奔，前方并不好走。日出前有你，日落后与你，这就够了，又怎要在意一切啊。　</p>
<p>遗忘就遗忘吧，也没什么好记起来的，失去就失去吧，终归没什么好拥有的，遗憾就遗憾吧，遗憾的多了，反倒没什么好释然的了，说到底我只是个襁褓里的婴儿，幼稚单纯，天真也无邪，我以为我真的可以通过我的努力回到以前，但是我发现即使我回去了，但别人却回不去了，终于有一天我明白了过来，但是发现你早已经离我远去，其实也没什么好遗憾的，我终究是个过客而已　</p>
<p>在乎或不在乎，又怎么样啊，期待又有什么意思呢，跟日落的晚霞一般，终归会离去，到最后又怎么样啊，始终都是自己　</p>
<p>我也曾想在晚风中独坐，也想要在繁华下坐着摩托，让夜来的风吹进耳朵，飘起发丝，难得叶落知秋，才记起仰望星空。　</p>
<p>如同耳边响起的奏乐一般轻轻的掉落在湖水当中，天空早已经没了色彩，湖水荡起的涟漪就像我一次又一次的心惊，脚边的蚂蚁依旧我行我素，仿佛一切都没有发生，飘落的秋黄惊走了鸟群，雨下的很大，我没有伞，也没有人在身旁。</p>
<p>一首歌把我从满是孤独的世界带了出来，灵魂也在感同身受，在那里并没有其他色彩，只有一片白色的湖，白色的湖旁有白色的沙，白色的沙上有白色的鸟，夕阳的红霞也在眼前化为了白色，树上的叶重新焕发出生机，树根前有个人，她是那么洁白而无暇，如同只在梦中出现的人一般完美，在她身旁有一只流浪的狗，是多么的恶煞，眉宇间皆是凶相，正被那高洁如纸般的人抚摸，如此一般，不知过了几年。四处流浪的迷雾始终没有退散，再也不清楚远方有什么。　</p>
<p>不要再去在意别人的眼光，别人的话，做好自己才是最好的，我的心早就在一次次伤害中支离破碎，如果没有如果，那我的人生早就没有了幻想，如果没有坎坷，那我早就没有了经历，如果只剩下快乐，那我早就没了童年，如果没有人生，那我们便没有了意义，我生来就会死去，那活着的意义是什么，其实很可笑，哪怕只是一句话都可以让人生充满意义，不该放弃一切，哪怕只是因为日落下一句誓言，哪怕是为了繁星下的一句承诺，都不该放弃，哪怕充满了灰暗，但我们都有我们的意义，不论是好或是坏，浪子终将回头，流浪的人始终都会觉悟，世界大的很，如果可以的话，答应我，我会带着你的那一份看下去。　</p>
<p>雨下的很大，想要希望的一切都在日落的夕阳下再见，昏沉的天空下，路旁扬起的尘埃落在石阶的苔藓上，树叶早已经掉光，蚂蚁蚕食着一切，窗口的玻璃破裂在地上，杂乱的书桌上堆叠着椅子，黑板上最后的字已经看不清了，留下的最后一册书也停在了2016年，我总是那么喜欢感触，但还是回不到以前了，人是什么时候离开的，早就记不清了，只记得后来我们再也没有遇到过，看见了一个很像你的人，发现你早就和我分道扬镳了，哪来的本可以，只有当下罢了　</p>
<p>我们早就回不去了，也许你已经老了，而我却在一处不为人知的地方安静地度过余生，营救的历史早就被淡忘，也许故事只属于我自己，我也走不出如此辽阔的海洋了，　</p>
<p>有时候我们需要的只是片刻的平静，只需要一个看起来很不错的希望，然后朝着那个希望走去，有什么话就说吧，万一没了机会，有什么想哭的就哭吧，万一没有了眼泪，我们都在寻找自己的希望，都有自己的美好，这世间太过吵闹，只想在角落独坐。　</p>
<p>站在楼顶的时候其实我已经平静了，很少有的那种平静，只在傍晚落下时刻，坐车出发，旅程中晚风吹过脸颊时候，还有夜里安静的时候，独自一人听着音乐，看着太阳慢慢升起时候，才会有的平静，我以为我看到的够多了，不论山川河海，或是密林小溪，亦或是晚霞的繁华落尽，不必说乡下的美好，也不必说城市的灯红酒绿，我只是喜欢看这个世界，至少说旅程的一切，不在于起点或终点，路上才是最好的。下的雨刚刚好，刺骨的寒风已经让我清醒很多，也让我不再胆怯痛苦。　</p>
<p>海边的风正如湖中的水，你不能做我的诗，正如我不能做你的梦。　</p>
<p>海边的梦正如云中的彩，你不能做我的残阳，正如我不能做你的明月。　</p>
<p>从意义开始变成有意义的时候，承诺就开始了，后来意义变成了消逝的尘埃，再也摸不到了，承诺变成了天上的皓月，看到了却无人提起。曾经所拥有的不过是晚霞下的人生，虽然美好，可却再也回不来了，青城的鸟群还在，朝阳美好的小巷也在，河边的船依旧匆忙，可再也看不到桥上你我共赏月初时了。　</p>
<p>有时候我更愿意相信童话，或许我的眼前是谎言，另一面是嘲讽或是站在自己的立场看着我的笑话，可即便是这样我也愿意相信眼前的一切，不论怎样都会有我这么一个随时都会陪着演戏的人，我也不会再去追寻任何答案，青城的迷雾我不会再揭开了，我也不会让我自己变成迷雾本身了。</p>
<h1 id="2021-9-1-30"><a href="#2021-9-1-30" class="headerlink" title="2021&#x2F;9&#x2F;1-30"></a>2021&#x2F;9&#x2F;1-30</h1><p>就好像夕阳不会在意月亮是否升起，我也好像没有在意过对我的误解，如果你想这便是我那么我就是谁，讲真的，真正的我到底迷失在了哪一年，哪一个月，哪一天，哪一分钟，哪一秒。就像死而后生一样我也想成为小说里的主角再次经历一生，回到从来没有存在感，沉默寡言，不善言语，一个人回家，一个人在学校吃饭的我。有一句话叫做错的不是我，错的是整个世界，但即使错了整个宇宙，都无法摆脱，与其恨在这个世界的一切，倒不如热爱一切，就像在玻璃瓶外玩玻璃球的男孩再也赢不回自己的球，因为他把它埋进了土里，再也回不来了。　</p>
<p>我也曾觉得世界在远离我，也曾想要拥抱这个世界，我也曾想要摆脱一切，也曾想要热爱一切，每个人都曾感慨夕阳落下的海霞红，也曾感慨无尽黑暗的碧穹，好像从来都没有想要赞叹光天化日下的现实，可是如果没有清晨带来的希望光明，又哪来午后无尽孤寂的人生。我们都曾想要珍惜，但就像早已经破碎一地的玻璃，越拼命抓住，到最后玻璃依旧支离破碎，而我们早已经满目疮痍。无比期待的亲情与友情终究还是破灭，无尽轮回的太阳终究还是会熄灭，希望终究迎来黑暗。但希望终究会照亮一切，太阳也会发出最后的光，而你也最终会成为亲情与友情　　</p>
<p>我希望如约而至的不止是纯白的冬天，还有纯白的自己，我希望西风吹来的不止是萧瑟的秋天，还有不再萧瑟的自己，我希望雨夜送来的不止是蝉鸣的夏天，还有不再蝉鸣的自己，我希望春天治愈的不止是枯木，还有自己。　</p>
<p>如果你奋力追求的梦想被人当做是垃圾，还诋毁你跟街上流浪的乞丐一样没有用，那么不要伤心也不要否认自己，因为在这件事情上我走的比你还远，你还有机会，而我只能去当一个浪迹天涯的沦落人，至少可以不受约束地追求一切　　或许我们的意义就是每天早上可以嗅着清风带来的气息，带来一切的平静，带去一切烦恼。或许我们的意义是可以在下午睡一觉睡到夕阳落霞，可以看着霞红感慨一切的人生，可以随着晚风回到美好。或许我们的意义就是半夜可以随着歌声入眠，不再看着月亮落下，不再留下懊恼。可火车停不下，我们跟着它走过了落寞孤单，走过了繁华落尽，可火车停不下，想说的话也埋进了心房，想做的事也丢弃在角落，可火车停不下，再多的风景也记不住，再多的故事也说不出，可火车依旧是停下了，白杨树也停下了，承载我们一生的火车停下了。我们都在变，不变的始终都是这个世间。　</p>
<p>可太阳依旧会落下，带来了忧愁落寞，可月亮依旧会升起，带来了孤单惆怅，但太阳依旧会升起，带来了远方和故乡，也不要忘记，月亮落下的时候，它和你一起在黑暗中摸索光明。　</p>
<p>夜里的雨，还是雨里的夜，我记不清了，只记得我放空了一切，只剩下了淅淅沥沥的水声，仿佛世界都在离我远去，水声也变小了，只剩下我自己了，我感觉我快要死了，可突然一阵心悸，好像什么也没有发生，我又从那个虚无的世界回来了　</p>
<p>我开始怀疑自己了，怀疑我所做的一切是错的，怀疑我如此坚持自己的本心到底为了什么，甚至怀疑我为什么不去变成一个我讨厌的人，我越来越看不透自己了，就像他回来了一样，只会成为一个逐渐迷失自己的人，甚至再也找不回来了。　</p>
<p>他没有回来，一直是我没有回来，他一直在影响我，甚至他知道答案，但我不知道，他也没有办法说出来，我只能把我自己放下，重新拾起他。　</p>
<p>不知道从什么时候起，也许是五年前，也许是刚刚，我再也不敢放声大哭，因为我知道再也不会有人抱着安慰我，再也不愿说出心里话，因为我知道不会有人喜欢倾听了。就像我一直在意的过去，它回不来了，但也一直在影响我，就像我再也记不清到底是梦还是现实，竹林里的湖也不曾存在，你也未曾离去，我也未曾消逝。　</p>
<p>我见过了太多太多的故事，我想要说出来可是就会发现任何一个故事都很漫长，就像一生一样漫长，我想要诉说我的感受，可这感受就像是世界上最难以叙说的东西，漫长也孤独，等的是希望，也是绝望。　</p>
<p>街尾最终还是没有那个楼梯，也没有坐在门口的那些老人，楼梯下的湖也不曾存在，校门终是没有人在等待，就像店后依旧没有那个暗门，如此繁华的广场还是没有那个座椅，暴雨下的街头我也没有遇见你，也不曾为你披上衣服，一切都像是我的臆想，可我早就已经不记得它究竟是梦，还是现实。　</p>
<p>时间很漫长，岁月很短暂，时间也许可以一去复返，可岁月就像一场有去无回的旅行，我的这段路早就没有了意义，但至少下个路口的时候我知道你还在，或者说你们还在，但我好像注定是要一个人淋一场雨，一个人看风景，一个人看遍世界。南迁北归的燕儿们啊，就像我四处流浪的命啊早已经平淡如水，可却依旧想要年少轻狂。　　我不想再期盼了，不想再等着那个叫做命中注定的人来拯救我了，也不想有什么救世主来，我更想一个人坐在阳台迎接着太阳月亮，生来便是孤独，我也不希望有什么改变了，也许只有我真正不在意别人眼光那一天，我才能释然吧。</p>
<h1 id="2021-8-1-31"><a href="#2021-8-1-31" class="headerlink" title="2021&#x2F;8&#x2F;1-31"></a>2021&#x2F;8&#x2F;1-31</h1><p>我们在后悔中长大，失败中成长，当秋叶落尽世间繁华的时候，你我都会释然的。我曾经活在虚幻里，活在一个只有自己的世界，那里只有一片落日，一望无际的海洋，还有一艘小的可怜的船，落日后还有黑夜，让我幻想着一切的美好。可惜，日出了，只剩下光光天化日下的现实了。　　</p>
<p>明白一件事并不简单，也许只需要一句话，一个人，也许只需要一秒钟，也许需要一生。</p>
<h1 id="2021-7-1-30"><a href="#2021-7-1-30" class="headerlink" title="2021&#x2F;7&#x2F;1-30"></a>2021&#x2F;7&#x2F;1-30</h1><p>我总是喜欢回忆，有些时候想要回到过去，不想再面对下一秒，现在看我的以前，觉得自己很幼稚，可是我改变不了过去。有时候我觉得我不再像以前，每天混混沌沌，为了在不久以后就消失的友谊而日夜颠倒，也可以付出所有，但最后还是一无所获，有些时候我总是在欺骗自己，也许吧</p>
<h1 id="2021-6-1-31"><a href="#2021-6-1-31" class="headerlink" title="2021&#x2F;6&#x2F;1-31"></a>2021&#x2F;6&#x2F;1-31</h1><p>今天翻了一下我的好友，看到一个人很久没上线了，以前我们经常一起玩，后来我联系上了他，你以为他已经回归生活，不再接触游戏的时候，他已经不在了，就像一段记忆再也没有了见证者。　</p>
<p>故事已经过去很久了，我也只记得事情大概，就像残缺的海洋，缺失的记忆到底是什么已经无从得知，但我依旧会逃避，直到忘记它。　</p>
<p>有些事情不必说出口，有些话也不需要述说，让它留在自己的心里，成为只属于自己的故事。</p>
<p>夺来的不叫缘分，抢来的不叫自我，有些东西，该到就会到，有些事情，该绝就会绝。　</p>
<p>时间太短了，短得就像黄粱一梦，有很多事情来不及珍惜就走了，很多东西也在无数次意外中丢失。时间足以冲淡一切，冲淡世间的一切，曾经厌恶的也许开始喜欢，曾经热爱的也许已经放在了角落，就像你我曾高谈论阔的梦想，也在时间里离开。曾经无数相似的瞬间，也都来不及记忆。也许梦不是现实，不是过去，不是未来，也不是虚幻，应该是时间之外的往事。</p>
<h1 id="2021-5-1-30"><a href="#2021-5-1-30" class="headerlink" title="2021&#x2F;5&#x2F;1-30"></a>2021&#x2F;5&#x2F;1-30</h1><p>一回游戏，一次人生，一场落幕，最终都是离别。也许你会相伴为终，也许你独为所情，也许你早已退场，但故事永不落幕。　</p>
<p>你的出现让我意外，早已经结束的故事再次起航，牵连多少年的是非，最终归于你我的身上，也许你我本不该在此相遇，但故事已经结尾，最后一句便是我们的故事。　</p>
<p>如果本就该如此，那背负起的便不再是负担，看到的美好，经历的一切，都会有解释，本就该是如此的人生，被意外打破，不断出现的巧合让我不断怀疑的世界，早就画好了的画，早就讲好的故事，早就经历过的过往，让世界不断重复。看到的世界总是如此美好，角落的肮脏永远被隐瞒，劈开的缺口让新的世界抵达，看到的早已经不是原来的世界。不断启程的旅行，不断经历的黑夜，成为的人，再次重复的人生。　</p>
<p>我忘记了那一年，记不清的那一年我已经不记得我做过什么了，留下的只是零零散散的故事，就像梦里的那样。　</p>
<p>巧合的出现得以让我经历的与他人不一样，可惜最终留下的只能是一个笑话。　</p>
<p>与孤独为伴，与世界为敌，让人生成为故事，让记忆成为过去。在局内，创造属于自己的传奇，消失的一切，都成为过去，早已经看过的世间，早已经消逝的时间。　</p>
<p>总是说永不言弃，可在墙内，我们无所是从。我们不缺少勇气，也不缺少毅力，可鱼最终是跳不出鱼塘的。　</p>
<p>用努力换来的一切，在别人眼里是那么低级，总有人攀比，总有人挑衅，可是狮子总是会睡醒的，狗最终也会叫的。　</p>
<p>有些东西并非那么重要，有些人并非需要结交，有时候一眼便是缘分，有时候就站在眼前却不曾相识。　</p>
<p>每天都活在自己的世界，我知道自己怎么了，我把梦当成了现实，日记里写满了我的梦，我害怕有一天我会把它当成现实，就像开始那样。每次我都想要去知晓它，可我知道，那后面不是那一片竹林，也不是那一个湖。　</p>
<p>人生自有人生忆，故事自有故事幕。　</p>
<p>总是说不在乎，可失去了却在哭泣，总是在讲道理，但自己都不懂，又哪来的人懂。　</p>
<p>我用了三年来探真相，如今它就在眼前，我却又像回到了起点。　</p>
<p>唯一明白我的人，早已经分道扬镳 唯一逗我笑的人，也早就不在了身边。　</p>
<p>就像开始的那样，我又回到了开始的地方，只会撞南墙的人，也开始寻出路。也许一切的发生不会是巧合，只不过是在合适的时间，遇到了合适的事情。　</p>
<p>也许并不是回到开始，故事并没有发生，三年并没有开始。</p>
<h1 id="2021-4-1-31"><a href="#2021-4-1-31" class="headerlink" title="2021&#x2F;4&#x2F;1-31"></a>2021&#x2F;4&#x2F;1-31</h1><p>既然已经过去，那么再次回望的人，一定会是个傻子。　</p>
<p>对我来说，最好的伪装就是把伪装变成自己，让自己成为了伪装。我花了两年，我把自己变成了他，把他变成了我，我知道，这一辈子我永远也不会知道自己到底是谁了　</p>
<p>传承便是历史，历史的间断，让世界不再完整。　</p>
<p>时间的束缚得以让我享受人生，也同时让我悲叹人生。　</p>
<p>总是在创造经历，人最终是要看遍世间繁华百态，历经了一切，愿我仍然单纯。　</p>
<p>你曾经与我说，世间繁华都是要去看看的，用照片留下痕迹，用记忆留下回忆。看到的美好永远在感叹，愿你我回忆的事情永远美好。　</p>
<p>曾经我以为我早就可以放下过往，直到我再一次看到我的以前。　</p>
<p>我已经发现了不对，可是我的大脑发现不了。　　</p>
<p>当它出现的时候，我就知道，再也回不去了。</p>
<p>总是说着抬头往前，可是一回头，谁又不会落泪.　</p>
<p>出现的海面，隐藏的海底。　</p>
<p>总是说新的开始，可看到了旧照片，又开始怀念过去。　</p>
<p>我不记得你是谁了，你也不会记得我，但记忆之中依旧有你，你也依旧有我，即使是朋友，也不会再是朋友。　</p>
<p>被时代抛弃，与世界脱轨，便再也没了人明白我，早已经不分虚实。　</p>
<p>我一直在寻找的路上，只不过他们把我忘了而已。　</p>
<p>当孤寂的灵魂相遇，便多了条约束，我知道你是我，你也知道我是你。　</p>
<p>沉浸在时间中，看淡时间之外，跳出时间的圈，回到时间的未来。　</p>
<p>你很幸运，你赶上了这一切，让我来前行，我已经开始退场，但愿你依旧前行。　</p>
<p>我为了你把我自己忘记了，可你却离去了，自此之后我便成了你。　</p>
<p>我看过了日出与日落，我看过了黑夜与阳光，看过了海与江，看过了城市的繁华也看过了乡下的宁静，我仍然在路上。　</p>
<p>不断上升的人生里，不断出现的意外中，让你我感慨。我的人生已经脱轨，在时代中消逝，历史中回忆的未来，最终不是属于我的。　</p>
<p>在江上的时候你说，你的梦想是星辰大海，我说你的人生就像一块白板，你自己每走一步就写上一句话，等到什么时候上面写满了字，那时候你的梦想就该实现了。你没说话，就像以前一样，谈论着梦想的我们，最终只是归于生活中，再也不顾及角落里曾经的梦想。　</p>
<p>即将启程的旅行中，让回忆不断浮现，就像你说的那样，我们总是在感慨着，也许后来的某一天，你我也会像几年前那样，回忆着旅程。　　不断交错的人生里，总有相见，总有分离，也许再次看到，早已是未来，不断知晓的真相，不断解开的迷雾，无论多么离奇的世界，都是真相，人无法言心，物无法言语。　</p>
<p>无论最后是否归于平静，愿你依旧安好，就像以前一样，归于未来与过去，介于现实与虚幻，疯癫不成性，理智不成型，人生不成样，故事不成传奇。愿你我再次相见。　</p>
<p>早已经布下的局，早就发了芽的叶，早就成了树的根，历经的是非，经历的过去，早已画成的圈，再也跳不出的鱼塘，归于平静的未来，早已消逝不见，成为另一个人，隐藏起的本性，再也分不清的现实，让你我相遇。</p>
<h1 id="2021-3-1-30"><a href="#2021-3-1-30" class="headerlink" title="2021&#x2F;3&#x2F;1-30"></a>2021&#x2F;3&#x2F;1-30</h1><p>想的太多，最后都无一用处。完美的事情，终会有一缺点。　</p>
<p>很多事情都是在安静过后才想明白。　</p>
<p>回首一看，不是时间过去了，回忆还在那个地方，过去的是人。　</p>
<p>过去吧，谨记以前，三体有一句话，他说，如果有墓碑，那碑文应该是，来了，爱了，送给她一颗星星，走了。人生很短暂，一生所经历不过是区区百年光阴，十年如一变，改变得太晚了。　　分不清的是非，理不断的思绪。一眼望穿千年，只为一句离开。　</p>
<p>永远不要以为自己已经懂了，永远有人比你明白。总是说内敛，真正做到的又有几人。你说我有城府，可依旧幼稚，看的明白，行的糊涂。可我依旧不会是，也不会有，现在不会，以后也不会。　</p>
<p>很奇怪的感觉，闭了眼，眼前的不是漆黑，是一个世界，睁开眼，便是一片漆黑。看到的是一个世界，落下的是夕阳，你跟我说，世界的尽头是世界，跳出池塘的鱼在死去，离开圈的人在离世，留下的是一个传奇，剩下的是一个残局。　<br>　<br>后来的我们，用尽一生，来守护童年。　</p>
<p>你跟我说，做好自己就好了。可是我连自己是什么人，什么样都不知道。　</p>
<p>你跟我说，如果你要去死，那剩下的世界，你看到过了吗。　</p>
<p>哥们不向往你所述说的未来，处在迷雾之中，临来的即将是黑夜，当太阳再次升起。人依旧是那个人，心也不再是那个心。</p>
<h1 id="2021-2-1-28"><a href="#2021-2-1-28" class="headerlink" title="2021&#x2F;2&#x2F;1-28"></a>2021&#x2F;2&#x2F;1-28</h1><p>被侵蚀了个性，只能成为千篇一律。</p>
<p>如果一切都是安排好的，你又怎么知道你现在所做的的一切是否是被安排的。</p>
<p>当真相浮现，末路已归途。　</p>
<p>很早就醒了，也许相识一场，相离一场，江依旧是江，山依旧是山，可惜，桃花落下之时，你我早已分道扬镳。　</p>
<p>“传奇的故事，人性的世界。如果你身旁没有一个人，那不是孤独，那是已自在独行”　</p>
<p>　既像是在告别，也像是在告白，如果人世间别无他物，那影响的只有人本身。　</p>
<p>　日出和夕阳已经看过，留不住的爱恨离潮。你我皆为普通的普通人，他才是疯子。</p>
<h1 id="2020-10-1-30"><a href="#2020-10-1-30" class="headerlink" title="2020&#x2F;10&#x2F;1-30"></a>2020&#x2F;10&#x2F;1-30</h1><p>除了辽阔的星空，舍掉雄伟的机甲，剩下的，也许就只有那星舰和来临的末日能够让我喜欢了。</p>
]]></content>
      <categories>
        <category>短句</category>
      </categories>
  </entry>
  <entry>
    <title>Unity基础教程</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C/Unity/Unity%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>游戏引擎</tag>
      </tags>
  </entry>
  <entry>
    <title>利用VPS搭建VPN</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E7%BD%91%E7%BB%9C/VPN/%E5%88%A9%E7%94%A8VPS%E6%90%AD%E5%BB%BAVPN/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><blockquote>
<ul>
<li><a href="#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C">准备工作</a><blockquote>
<ul>
<li><a href="#%E8%B4%AD%E4%B9%B0%E5%B9%B6%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8">购买并连接服务器</a></li>
</ul>
</blockquote>
</li>
<li><a href="#%E6%90%AD%E5%BB%BAshadowsocks">搭建Shadowsocks</a><blockquote>
<ul>
<li><a href="#shadowsocksr%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85">shadowsocksR脚本安装</a><blockquote>
<ul>
<li><a href="#%E7%A7%8B%E6%B0%B4%E9%80%B8%E5%86%B0teddysun%E8%84%9A%E6%9C%AC">秋水逸冰(teddysun)脚本</a></li>
<li><a href="#%E9%80%97%E6%AF%94%E6%A0%B9%E6%8D%AE%E5%9C%B0%E8%84%9A%E6%9C%AC">逗比根据地脚本</a></li>
<li><a href="#jeanniestudio%E8%84%9A%E6%9C%AC">JeannieStudio脚本</a></li>
</ul>
</blockquote>
</li>
<li><a href="#shadowsocks-rust%E5%AE%89%E8%A3%85">shadowsocks-rust安装</a><blockquote>
<ul>
<li><a href="#snap%E5%AE%89%E8%A3%85">snap安装</a></li>
<li><a href="#docker%E5%AE%89%E8%A3%85">Docker安装</a></li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
</li>
<li><a href="#%E6%90%AD%E5%BB%BAv2ray">搭建V2ray</a><blockquote>
<ul>
<li><a href="#wulabing%E8%84%9A%E6%9C%AC">wulabing脚本</a></li>
<li><a href="#jrohy%E7%9A%84multi-v2ray%E8%84%9A%E6%9C%AC">Jrohy的multi-v2ray脚本</a></li>
</ul>
</blockquote>
</li>
<li><a href="#%E6%90%AD%E5%BB%BAxray">搭建Xray</a></li>
<li><a href="#%E6%90%AD%E5%BB%BAbrook">搭建Brook</a></li>
<li><a href="#%E6%90%AD%E5%BB%BAtrojan">搭建Trojan</a></li>
<li><a href="#%E6%90%AD%E5%BB%BAnetch%E6%B8%B8%E6%88%8F%E5%8A%A0%E9%80%9F%E5%99%A8">搭建Netch游戏加速器</a></li>
<li><a href="#%E6%90%AD%E5%BB%BAl2tpipsec">搭建L2TP&#x2F;IPsec</a></li>
</ul>
</blockquote>
<p>在开始之前,必须先理解一件事,翻墙对于整个祖国建立起的防火墙来说,我认为是一种门槛,不管你使用的是免费的VPN,或者是付费的机场,更甚至是自己购买VPS搭建VPN,都是门槛,而不是漏洞,使用免费或者部分稍许便宜的VPN的就知道,节点通常会有很多,并且单个节点并不能一直使用,这就是被封了.当然,不管你是理解为漏洞还是门槛,你所使用的VPN都有概率被封禁.<br><br>在这其中呢,自行搭建VPN是封可能性最小的,所以接下来就让我们开始搭建VPN吧.<br></p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="购买并连接服务器"><a href="#购买并连接服务器" class="headerlink" title="购买并连接服务器"></a>购买并连接服务器</h2><p>之前使用vultr的服务器搭建过一个,时长超过三个月也依旧没有被封端口,自我感觉还行.<br><br>先注册vultr,怎么注册我就不教了,这是邀请码<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.vultr.com/?ref=9614311</span><br></pre></td></tr></table></figure></div>
<p>通过邀请码注册可以获得一百美元,前提是你得充十美元才可以用这一百美元.<br><br>然后点击左边的<strong>Dashboard</strong>,再点击<strong>Compute</strong>,最后点击<strong>Deploy Server</strong><br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/15/OJ1ugq.png"
                      alt="vultr"
                ><br><br>随后你就会进入下面这个界面<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/15/OJ752F.png"
                      alt="vultr"
                ><br><br>我们选择<strong>Cloud Compute - Shared CPU</strong>,然后在下面选择你的地区,我这里选择芝加哥,选择完成以后往下滑,需要选择系统,我们选择centos7 x64<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/15/OJ7TW6.png"
                      alt="vultr"
                ><br><br>然后我们需要选择套餐,这里最便宜的只要五美元一个月.<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/15/OJ7UgP.png"
                      alt="vlutr"
                ><br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/15/OJ7WVb.png"
                      alt="vlutr"
                ><br><br>然后我们输入服务器名称,再点击<strong>Deploy Now</strong>,然后你就拥有属于你自己的服务器了,它会自动给你跳转到管理服务器的页面,由于是刚买服务器,需要等待一到两分钟让它安装系统,如果太久没安装好,就刷新一下界面.<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/15/OJ7kol.png"
                      alt="vlutr"
                ><br><br>然后我们点击进入服务器的管理界面,随后复制你的IP地址和root密码<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/15/OJ7iiK.png"
                      alt="vultr"
                ><br><br>随后我们需要使用SSH连接,可以用Xshell或者FinalShell,这里就直接拿FinalShell演示了.<br><br>先点击这个文件夹一样的按钮<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/15/OJ7n4a.png"
                      alt="vultr"
                ><br><br>然后创建SSH连接<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/15/OJ7egC.png"
                      alt="vultr"
                ><br><br>然后会退出这样的一个界面,端口默认,用户名填root,IP填你服务器的IP,密码填服务器密码,其余的默认就可以了.<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/15/OJ7rVL.png"
                      alt="vultr"
                ><br><br>连接成功后是这样的<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/15/OJ7Kqi.png"
                      alt="vultr"
                ><br><br>到这一步,准备工作就算结束了,接下来就是正式进入搭建教程了,你也可以选择购买域名来达到更好的抗封锁,当然也可以自行搭建网站等等<br><br><a href="#%E7%9B%AE%E5%BD%95">目录</a><br><br></p>
<h2 id="购买域名并配置CloudFlare"><a href="#购买域名并配置CloudFlare" class="headerlink" title="购买域名并配置CloudFlare"></a>购买域名并配置CloudFlare</h2><p><strong>购买域名这一步是可选的,并不是必选的</strong><br>域名的购买可以选择<a class="link"   href="https://www.namesilo.com/" >namesilo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>怎么注册我就不教了<br><br>然后选择一个最便宜的,我这里就选择.MOM了<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJrc6j.png"
                      alt="namesilo"
                ><br><br>然后搜索你想要的域名,我这里就搜索guanyi了<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJr0Dx.png"
                      alt="namesilo"
                ><br><br>可以看到这个域名要十多块钱,点击add加入购物车,<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJrSnt.png"
                      alt="namesilo"
                ><br><br>然后点击checkout来结账<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJrskp.png"
                      alt="namesilo"
                ><br><br>然后在结账界面再次点击checkout<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJrVpU.png"
                      alt="namesilo"
                ><br><br>然后再付款界面多左边点击Show More选择china,就有国内的支付方式了,点击支付宝的图标就会跳转到结转界面,付款之后域名就归你了.<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJrYYY.png"
                      alt="namesilo"
                ><br><br>随后我们点击上面的My Account<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJrl5v.png"
                      alt="namesilo"
                ><br><br>然后点击Active Domains下的Manage<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJr9Kq.png"
                      alt="namesilo"
                ><br><br>然后点击从左往右数,最后一个图标<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJr81M.png"
                      alt="namesilo"
                ><br><br>到这一步,我们先新建一个标签页去CloudFlare官网注册一个自己的账号,如果已经注册了就在主页点击网站,并点击右侧的添加站点<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJru81.png"
                      alt="cloudflare"
                ><br>然后输入你的域名,计划选择免费DNS,然后跟着提示走就可以了,我这里没有多出来的域名了,所以无法演示了,等后续再补上吧.<br>大致就是给你一个DNS解析域什么的,然后添加到你的域名上面,就是刚刚我们最后没去CloudFlare的那个页面添加,然后需要等待几十分钟到几个小时不等,一般不超过24小时,你的DNS就会变成CloudFlare了<br><br>之后CloudFlare就可以直接管理你的域名了.</p>
<h1 id="搭建Shadowsocks"><a href="#搭建Shadowsocks" class="headerlink" title="搭建Shadowsocks"></a>搭建Shadowsocks</h1><p>Shadowsocks的历史我就不多说了,想要了解的自己Google<br></p>
<h2 id="shadowsocksR脚本安装"><a href="#shadowsocksR脚本安装" class="headerlink" title="shadowsocksR脚本安装"></a>shadowsocksR脚本安装</h2><p>输入下面的命令来安装wget,如果你安装了wget就跳过下面的命令<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install wget</span><br></pre></td></tr></table></figure></div>
<p>安装curl依赖包<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install curl -y</span><br></pre></td></tr></table></figure></div>
<h3 id="秋水逸冰-teddysun-脚本"><a href="#秋水逸冰-teddysun-脚本" class="headerlink" title="秋水逸冰(teddysun)脚本"></a>秋水逸冰(teddysun)脚本</h3><p><a class="link"   href="https://github.com/teddysun" >秋水逸冰Github <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><br><a class="link"   href="https://teddysun.com/486.html" >Shadowsocks 一键安装脚本 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><br>使用ssh连接至服务器后,输入下面的命令<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh</span><br><span class="line">chmod +x shadowsocks-all.sh</span><br><span class="line">./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log</span><br></pre></td></tr></table></figure></div>
<p>然后这里我们选择ssr,输入2并回车<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJeBdb.png"
                      alt="ssr"
                ><br><br>然后我们输入密码,然后输入端口,端口我这里就选择8388.<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJeUOl.png"
                      alt="ssr"
                ><br><br>加密模式这里就选择14了.<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJeWNg.png"
                      alt="ssr"
                ><br><br>然后数据传输协议就选3<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJebEB.png"
                      alt="ssr"
                ><br><br>混淆方式就选1<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJekus.png"
                      alt="ssr"
                ><br><br>好了之后随便按一个键就会输出这样的内容<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJezFK.png"
                      alt="ssr"
                ><br><br>安装好以后就会输出类似这样的内容<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJeFRa.png"
                      alt="ssr"
                ><br>那么到这里,你就安装成功了,此外你还可以开启kcptun或者bbr加速.至于客户端连接,只需要使用shadowsocks按照你所选的配置进行连接就可以了<br><br>如果你想卸载,可以输入下面的命令,或者你干脆把服务器重装.</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">./shadowsocks-all.sh uninstall</span><br></pre></td></tr></table></figure></div>
<p>此外还有脚本的命令<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">启动脚本后面的参数含义，从左至右依次为：启动，停止，重启，查看状态。</span><br><span class="line"></span><br><span class="line">Shadowsocks-Python 版：</span><br><span class="line">/etc/init.d/shadowsocks-python start | stop | restart | status</span><br><span class="line"></span><br><span class="line">ShadowsocksR 版：</span><br><span class="line">/etc/init.d/shadowsocks-r start | stop | restart | status</span><br><span class="line"></span><br><span class="line">Shadowsocks-Go 版：</span><br><span class="line">/etc/init.d/shadowsocks-go start | stop | restart | status</span><br><span class="line"></span><br><span class="line">Shadowsocks-libev 版：</span><br><span class="line">/etc/init.d/shadowsocks-libev start | stop | restart | status</span><br></pre></td></tr></table></figure></div>
<p>如果你想查看运行状态呢,就输入<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/init.d/shadowsocks-r status</span><br></pre></td></tr></table></figure></div>
<h3 id="逗比根据地脚本"><a href="#逗比根据地脚本" class="headerlink" title="逗比根据地脚本"></a>逗比根据地脚本</h3><p><a class="link"   href="https://github.com/ToyoDAdoubi" >逗比根据地Github <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>相比于秋水逸冰的脚本来说,逗比的脚本要简单许多.</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure></div>
<p>先输入1来进行安装ssr<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJe1vC.png"
                      alt="ssr"
                ><br><br>先输入端口和密码,然后加密方式选16<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJe7dL.png"
                      alt="ssr"
                ><br><br>选择混淆协议<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJerNX.png"
                      alt="ssr"
                ><br><br>然后一直默认就可以了<br><br>最后输入这样的内容就是安装成功了,客户端的配置就使用shadowsocks按照你的配置进行选择就可以连接了.<br><br>此外这个脚本还支持快速安装bbr加速,并且逗比还有许多其他的有关代理的脚本,可以看看<br><br><a class="link"   href="https://github.com/ToyoDAdoubi/doubi?tab=readme-ov-file#%E4%BB%A3%E7%90%86%E7%9B%B8%E5%85%B3" >逗比的其他脚本 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="JeannieStudio脚本"><a href="#JeannieStudio脚本" class="headerlink" title="JeannieStudio脚本"></a>JeannieStudio脚本</h3><h2 id="shadowsocks-rust安装"><a href="#shadowsocks-rust安装" class="headerlink" title="shadowsocks-rust安装"></a>shadowsocks-rust安装</h2><p>目前官方最新版是rust版,截至博文更新,最新版本是在四天前<br></p>
<h3 id="snap安装"><a href="#snap安装" class="headerlink" title="snap安装"></a>snap安装</h3><p><strong>没更新完</strong><br>如果你还没有安装snap,就输入下面的命令,如果你安装了,就跳过.<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install epel-release</span><br><span class="line">sudo yum install snapd</span><br><span class="line">sudo systemctl enable --now snapd.socket</span><br><span class="line">sudo ln -s /var/lib/snapd/snap /snap</span><br><span class="line">sudo snap install snap-store</span><br></pre></td></tr></table></figure></div>
<p>然后输入下面的命令来安装shadowsocks-rust<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">snap install shadowsocks-rust</span><br></pre></td></tr></table></figure></div>
<p>使用下面的命令来查看你是否已经安装了<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">snap services shadowsocks-rust</span><br></pre></td></tr></table></figure></div>
<p>使用下面的命令来启用并启动shadowsocks<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">snap start --enable shadowsocks-rust.sslocal-daemon</span><br></pre></td></tr></table></figure></div>
<p>使用下面的命令来查看你是否已经成功启动了shadswsocks<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl status snap.shadowsocks-rust.sslocal-daemon.service</span><br></pre></td></tr></table></figure></div>
<p>编辑&#x2F;var&#x2F;snap&#x2F;shadowsocks-rust&#x2F;common&#x2F;etc&#x2F;shadowsocks-rust&#x2F;config.json,写入下面的配置</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   &quot;server&quot;:&quot;::&quot;,  #可同时监听IP4和IPv6</span><br><span class="line">   &quot;server_port&quot;:your port, </span><br><span class="line">   &quot;timeout&quot;:300,</span><br><span class="line">   &quot;method&quot;:&quot;aes-128-gcm&quot;,  #测试下128模式速度最好</span><br><span class="line">   &quot;password&quot;:&quot;your password&quot;, </span><br><span class="line">   &quot;fast_open&quot;:false,</span><br><span class="line">   &quot;nameserver&quot;:&quot;8.8.8.8&quot;,</span><br><span class="line">   &quot;mode&quot;:&quot;tcp_only&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>使用下面的命令来重启shadowsocks来应用你的配置<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart snap.shadowsocks-rust.sslocal-daemon.service</span><br></pre></td></tr></table></figure></div>
<p>使用下面的命令来启动.</p>
<h3 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h3><p><strong>没更新完</strong><br>首先我们需要安装Docker,输入下面这串命令<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br><span class="line">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></div>
<p>然后输入下面这串命令<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure></div>
<p>中途需要确定,输入y并回车就可以继续了.<br><br>使用下面这个命令来检查你是否安装成功<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure></div>
<p>弹出类似于这样的内容,就说明你已经安装成功了<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/15/OJ7J6U.png"
                      alt="docker"
                ><br><br>接着使用下面这个命令来启动docker<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure></div>
<p>输入下面的命令来安装shadowsocks-rust<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull ghcr.io/shadowsocks/sslocal-rust:latest</span><br></pre></td></tr></table></figure></div>
<p>使用下面这个命令列出本机所有的镜像<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker image ls</span><br></pre></td></tr></table></figure></div>
<p>输入下面的命令运行并将配置文件挂载到容器当中,创建外部端口映射以供容器连接.<br>下面的1080是可以更改的,可以选择一个自己喜欢的端口.<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run ghcr.io/shadowsocks/sslocal-rust \</span><br><span class="line">  --restart always \</span><br><span class="line">  -p 1080:1080/tcp \</span><br><span class="line">  -v /path/to/config.json:/etc/shadowsocks-rust/config.json \</span><br><span class="line">  -dit ghcr.io/shadowsocks/sslocal-rust:latest</span><br></pre></td></tr></table></figure></div>

<p>{<br>    “server”: “216.128.146.239”,<br>    “server_port”: 8388,<br>    “password”: “rwQc8qPXVsRpGx3uW+Y3Lj4Y42yF9Bs0xg1pmx8&#x2F;+bo&#x3D;”,<br>    “method”: “aes-256-gcm”,<br>    “local_address”: “216.128.146.239”,<br>    “local_port”: 1080<br>}</p>
<h1 id="搭建V2ray"><a href="#搭建V2ray" class="headerlink" title="搭建V2ray"></a>搭建V2ray</h1><h2 id="wulabing脚本"><a href="#wulabing脚本" class="headerlink" title="wulabing脚本"></a>wulabing脚本</h2><p><a class="link"   href="https://github.com/wulabing" >wulabing的Github <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><br><a class="link"   href="https://github.com/wulabing/V2Ray_ws-tls_bash_onekey?tab=readme-ov-file" >脚本位置仓库 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><br>wulabing大佬还有别的脚本,Xray_onekey什么的,推荐看看<br><br>下面这个命令当中二选一<br><br>Vmess+websocket+TLS+Nginx+Website<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate -q -O install.sh &quot;https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/master/install.sh&quot; &amp;&amp; chmod +x install.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure></div>
<p>VLESS+websocket+TLS+Nginx+Website<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate -q -O install.sh &quot;https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/dev/install.sh&quot; &amp;&amp; chmod +x install.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure></div>
<p>优缺点呢,我也说不上来,所以我选的是VLESS<br><br>输入1进行安装<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJAaKP.png"
                      alt="v2ray"
                ><br>然后再等待这段时间里,我们先去CloudFlare里添加一个A记录,DNS代理先暂时关闭,名称随意,IP地址填写你的服务器地址<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJAo0b.png"
                      alt="v2ray"
                ><br><br>然后回到你的ssh,输入你刚才输入的名称加上你的主域名<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJAqwl.png"
                      alt="v2ray"
                ><br><br>端口默认443就可以了,回车之后需要等待一段时间,这个时间我们可以去刷会视频,看会后会无期什么的<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJAB1g.png"
                      alt="v2ray"
                ><br><br>然后就会输出你的配置,类似于这样<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJATHB.png"
                      alt="v2ray"
                ><br><br>windows就去v2rayN,安卓就去v2rayNG,照着配置填写,就像这样<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/16/OJAU8s.png"
                      alt="v2ray"
                ><br></p>
<h2 id="Jrohy的multi-v2ray脚本"><a href="#Jrohy的multi-v2ray脚本" class="headerlink" title="Jrohy的multi-v2ray脚本"></a>Jrohy的multi-v2ray脚本</h2><p><a class="link"   href="https://github.com/Jrohy" >Jrohy的Github <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><br><a class="link"   href="https://github.com/Jrohy/multi-v2ray" >multi-v2ray <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><br>multi-v2ray脚本的好处就是可以多用户管理.<br><br>我们先在CloudFlare当中把DNS代理关掉.<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/17/OJKBdv.png"
                      alt="v2ray"
                ><br>接着输入下面的命令进行安装<br><br>如果你没有安装curl呢,请先去安装curl.<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">source &lt;(curl -sL https://multi.netlify.app/v2ray.sh) --zh</span><br></pre></td></tr></table></figure></div>
<p>安装完成以后直接就可以用,但是我们还有下一步,你想直接用也可以<br><br>输入下面的命令来启动TLS<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">v2ray tls</span><br></pre></td></tr></table></figure></div>
<p>然后输入1开启TLS,选择Let’s Encrypt证书,然后输入你的域名,然后直接回车继续<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/17/OJKOPj.png"
                      alt="v2ray"
                ><br><br>然后我们输入下面的命令更改传输协议<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">v2ray stream</span><br></pre></td></tr></table></figure></div>
<p>然后选择3,WebSocket,接着输入你的域名<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/17/OJKa9p.png"
                      alt="v2ray"
                ><br><br>然后输入下面的命令来走cdn<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">v2ray cdn</span><br></pre></td></tr></table></figure></div>
<p>然后我们输入你的域名,端口选择443,选择vmess_ws,选择Let’s Encrypt证书,然后直接回车<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/17/OJK5vY.png"
                      alt="v2ray"
                ><br><br>最后,就可以输入下面命令查看配置<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">v2ray info</span><br></pre></td></tr></table></figure></div>
<p>接着你可能会看见两个配置,这是因为安装的时候自动帮你配置好了一个,我们选择端口为443的配置进行连接<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/17/OJKWNc.png"
                      alt="v2ray"
                ><br><br>如果你配置感觉是正确的,但是无法翻墙,那么请ping一下你的域名,如果显示了延迟,那就是你的客户端的配置不对,如果不显示延迟,可以等等,或者说你服务端的配置不对<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/17/OJKUaq.png"
                      alt="v2ray"
                ><br><br>此外这个脚本还提供了docker安装的方法,可以自行去看<br></p>
<h1 id="搭建Xray"><a href="#搭建Xray" class="headerlink" title="搭建Xray"></a>搭建Xray</h1><h1 id="搭建Brook"><a href="#搭建Brook" class="headerlink" title="搭建Brook"></a>搭建Brook</h1><h1 id="搭建Trojan"><a href="#搭建Trojan" class="headerlink" title="搭建Trojan"></a>搭建Trojan</h1><h1 id="搭建Netch游戏加速器"><a href="#搭建Netch游戏加速器" class="headerlink" title="搭建Netch游戏加速器"></a>搭建Netch游戏加速器</h1><p>不建议自己搭建游戏加速器,该买还得买,自己搭的话,想要流畅不卡顿,不丢包延迟,成本太高了,当然你也可以购买拥有游戏加速节点的机场<br></p>
<h1 id="搭建L2TP-IPsec"><a href="#搭建L2TP-IPsec" class="headerlink" title="搭建L2TP&#x2F;IPsec"></a>搭建L2TP&#x2F;IPsec</h1><p>L2TP&#x2F;IPsec可以直接用在设备上,不需要另外的软件.<br><br>先输入下面的命令<br><br>不安装ikev2<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 所有变量值必须用 &#x27;单引号&#x27; 括起来</span><br><span class="line"># *不要* 在值中使用这些字符：  \ &quot; &#x27;</span><br><span class="line">wget https://git.io/vpnsetup-centos -O vpnsetup.sh &amp;&amp; sudo \</span><br><span class="line">VPN_IPSEC_PSK=&#x27;你的IPsec预共享密钥&#x27; \</span><br><span class="line">VPN_USER=&#x27;你的VPN用户名&#x27; \</span><br><span class="line">VPN_PASSWORD=&#x27;你的VPN密码&#x27; \</span><br><span class="line">sh vpnsetup.sh</span><br></pre></td></tr></table></figure></div>
<p>安装ikev2<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://get.vpnsetup.net -O vpn.sh</span><br><span class="line">VPN_IPSEC_PSK=&#x27;GuanYiNineHeaven&#x27; \</span><br><span class="line">VPN_USER=&#x27;GuanYi&#x27; \</span><br><span class="line">VPN_PASSWORD=&#x27;abcd1234&#x27; \</span><br><span class="line">VPN_DNS_NAME=&#x27;ikev2.guanyi.lol&#x27; \</span><br><span class="line">VPN_CLIENT_NAME=&#x27;NineHeaven&#x27; \</span><br><span class="line">VPN_DNS_SRV1=1.1.1.1 VPN_DNS_SRV2=1.0.0.1 \</span><br><span class="line">sh vpn.sh</span><br></pre></td></tr></table></figure></div>
<p>等待安装完成后,会输出这样的内容<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/17/OJKEht.png"
                      alt="l2tp"
                ><br><br>然后我们需要找到证书文件,文件名一般为下图所示<br><br>.p12一般为windows和linux所用<br><br>.sswan一般为android所用<br><br>.mobileconfig一般为ios和macos所用<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/17/OJKHIX.png"
                      alt="l2tp"
                ><br><br>然后我们需要导出文件,可以直接用finalshell直接下载到本地<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/05/17/OJKGtx.png"
                      alt="l2tp"
                ><br><br>PS:到这一步的时候我的服务器过期了,所以需要等待我重新买一个.<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://git.io/vpnsetup-centos -O vpnsetup.sh &amp;&amp; sudo \</span><br><span class="line">VPN_IPSEC_PSK=&#x27;GuanYiNineHeaven&#x27; \</span><br><span class="line">VPN_USER=&#x27;GuanYi&#x27; \</span><br><span class="line">VPN_PASSWORD=&#x27;abcd1234&#x27; \</span><br><span class="line">sh vpnsetup.sh</span><br></pre></td></tr></table></figure></div>
<p>随后,ikev2的连接方式请使用下面的命令:<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">powershell -command ^&quot;Add-VpnConnection -ServerAddress &#x27;ikev2.guanyi.lol&#x27; ^</span><br><span class="line">  -Name &#x27;NineHeaven.ikev2&#x27; -TunnelType IKEv2 -AuthenticationMethod MachineCertificate ^</span><br><span class="line">  -EncryptionLevel Required -PassThru^&quot;</span><br><span class="line"></span><br><span class="line">powershell -command ^&quot;Set-VpnConnectionIPsecConfiguration -ConnectionName &#x27;NineHeaven.ikev2&#x27; ^</span><br><span class="line">  -AuthenticationTransformConstants GCMAES128 -CipherTransformConstants GCMAES128 ^</span><br><span class="line">  -EncryptionMethod AES256 -IntegrityCheckMethod SHA256 -PfsGroup None ^</span><br><span class="line">  -DHGroup Group14 -PassThru -Force^&quot;</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>网络</category>
        <category>VPN</category>
      </categories>
      <tags>
        <tag>VPS</tag>
        <tag>VPN</tag>
      </tags>
  </entry>
  <entry>
    <title>弹吉他从入门到入土</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E9%9F%B3%E4%B9%90/%E5%90%89%E4%BB%96/%E5%BC%B9%E5%90%89%E4%BB%96%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>去年九月突发奇想,想买一把吉他,于是就上网挑选了一个烧火棍之王卡马D1C,但是吃灰了快一年,终于决定在临近7月的时候开始我的吉他生涯.<br><br>希望可以坚持下去,然后<del>装逼</del>.<br><br><strong><big>加油!</big></strong><br></p>
<hr>
<blockquote>
<p>首先就是十二平均律<br>我个人觉得这是一个比较难的点,因为我记忆力不大好.<br></p>
</blockquote>
<iframe width=600 height=400 src="//player.bilibili.com/player.html?isOutside=true&aid=88038918&bvid=BV1c7411t7dR&cid=857755923&p=2" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe>

<p>上面这个视频里介绍了唱名,音名和音程,音程很好理解,也就是每个音之间的间隔是多少,音名和唱名呢,我的理解就是一个字的意思和读音之间的关系.<br><br>此外呢还有每根弦空弦的音,那么根据空弦的音加上刚学的十二音程,我们就能推断出每根弦上的每个音都是什么了.<br><br>但是我觉得还是有必要去列一个表.<br></p>
]]></content>
      <categories>
        <category>学习</category>
        <category>音乐</category>
        <category>吉他</category>
      </categories>
      <tags>
        <tag>音乐</tag>
        <tag>吉他</tag>
      </tags>
  </entry>
  <entry>
    <title>Java版Minecraft联机教程</title>
    <url>/%E5%A8%B1%E4%B9%90/%E4%BC%91%E9%97%B2%E5%A8%B1%E4%B9%90/%E6%B8%B8%E6%88%8F/Minecraft/Java%E7%89%88Minecraft%E8%81%94%E6%9C%BA%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="局域网联机"><a href="#局域网联机" class="headerlink" title="局域网联机"></a>局域网联机</h1><h2 id="远程局域网联机"><a href="#远程局域网联机" class="headerlink" title="远程局域网联机"></a>远程局域网联机</h2><h1 id="服务器联机"><a href="#服务器联机" class="headerlink" title="服务器联机"></a>服务器联机</h1>]]></content>
      <tags>
        <tag>游戏</tag>
      </tags>
  </entry>
  <entry>
    <title>Git on Android</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Android/Git%20on%20Andoird/</url>
    <content><![CDATA[<p>本文参考以下文章:</p>
<ul>
<li><a href="">Git</a></li>
</ul>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><blockquote>
<ul>
<li><a href="#mgit">MGit</a></li>
<li><a href="#termux">Termux</a><blockquote>
<ul>
<li><a href="#%E5%85%8B%E9%9A%86">克隆</a></li>
<li><a href="#%E5%88%9B%E5%BB%BA">创建</a></li>
</ul>
</blockquote>
</li>
<li><a href="#%E5%85%B6%E4%BB%96%E6%93%8D%E4%BD%9C">其他操作</a></li>
</ul>
</blockquote>
<h1 id="MGit"><a href="#MGit" class="headerlink" title="MGit"></a>MGit</h1><blockquote>
<p>Mgit的下载链接:<br><br><a class="link"   href="https://play.google.com/store/apps/details?id=com.manichord.mgit" >Mgit On Google Play Store <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><br><a class="link"   href="https://play.google.com/store/apps/details?id=com.manichord.mgit" >Mgit on F-Droid <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><br>下载完成后进入到MGit, <strong>点击右上角三个点,进入设置,并把Git配置下的用户名和用户邮箱改成你自己的.</strong><br><br>例如Gitee,用Github或者别的就用别的,先进入网站,随后进入个人设置,或者设置,在基本管理处找到邮箱管理.<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/12/OmE3mL.png"
                      alt="Gitee"
                ><br>在我的邮箱地址处就可以看见了.用户名就是你的Gitee的用户名,比如说我的Gitee的用户名是关轶,那么在MGit的Git配置当中的用户名里,就输入关轶,用户邮箱就输入Gitee给你的,或者你自己绑定的就行了.<br><br>随后在 <strong>安全,进入SSH Key,点击右上角的的加号</strong> 文件名随意,其余的默认就行,然后点击,把里面的内容全部复制,然后打开Gitee,还是在设置里,找到SSH公钥,把刚才复制的内容粘贴.随后回到的MGit,复制你仓库的地址,然后选择一个本地路径,克隆就好了.<br><br>想实现多端同步呢,就时不时的拉取和推送一下,这样就ok了.</p>
</blockquote>
<h1 id="Termux"><a href="#Termux" class="headerlink" title="Termux"></a>Termux</h1><p>相比较来说呢,Termux的操作难度要比MGit高些许,不过也不是什么大问题.<br>首先进入到你的Termux,如果没有Termux请看 <a class="link"   href="https://blog.guanyi.lol/2024/04/19/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Android/Linux%20on%20Android%20%E7%9A%84%E7%BB%88%E7%AB%AF%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/" >Linux for Android 的终端环境配置 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <br></p>
<p>然后输入</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">pkg install git</span><br></pre></td></tr></table></figure></div>
<p>如果中途有停顿,就看看是不是需要输入Y&#x2F;N,如果是就输入Y.<br>安装完成后会出现这样的界面<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/13/OmsaSc.jpg"
                      alt="TermuxGit"
                ><br>然后我们将 <strong>The key fingerprint is</strong>上面的文件路径复制,<strong>只需要复制RSA 3072上面的就好了</strong>,比方说我的就是:<strong>&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;usr&#x2F;etc&#x2F;ssh&#x2F;ssh_host_rsa_key.pub</strong><br><br>然后再你的文件路径前输入一个cat用来读取你的key,比方说我的就是</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /data/data/com.termux/files/usr/etc/ssh/ssh_host_rsa_key.pub</span><br></pre></td></tr></table></figure></div>
<p>然后就可以看到输出了,是这样的<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/13/Omsowr.jpg"
                      alt="TermuxGit"
                ><br>从ssh-rra AAAAB3NzaC1开始到结尾,全都要复制.复制出来的内容是这样的:<br><br>ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC5Lh7rLEncm2966k6Flbsf&#x2F;PZva0vK+zUJmiEY&#x2F;GlGwy8JXeynpJER7ZZ30E0Yp3EKtG5YjHaefVr9QtgY7v0yW+&#x2F;vP18mjQMUje66Vo9&#x2F;onEcDU5nhzKxbORcH025bpKfeDK4gz7lP6okuqLsH4utmzbswoAXyKqX+kIaZfPMzvEbj&#x2F;NNEz8WwuR6iIydiwX+qix7FEuntBmU19g5Cbsa542h3xpnJu3BMGMGSwZqsCo50Budkx1H+in4HIWvdFwqsSzGjBejFNm3LvYeZ9rRNyNvXNm7WJWG0kpacI9R9OE752lbz96rvIHqsQvyS9+VqNaQ+n3hQp82vSahnbkf2jZ2AdE1f5ujqdt4TJKTRyUiQ0c1mhTnWLGe2kIVFdSRFodiL78V8O3XYs7&#x2F;BN8T5qbmYASDsed5IB4it8Q0Azn1Ua65dgL1aT3e4kRccxG0hvP+T5KC0mQpoQjerWXbOui+yQRuLCafi3Et0z2lrAz&#x2F;sn9YU1GZyD9NhJivxNk&#x3D; u0_a243@localhost<br><br><br>然后还是打开Gitee,进入设置,点击SSH公钥,将刚才复制的内容粘贴,就好了<br><br>然后是克隆仓库到本地,或者是在本地新建一个仓库.<br></p>
<h2 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h2><p>如果你想克隆一个仓库,那么就去你的gitee,或者github或者别的,上面会有提示.比如说我的<br><br>先在Termux输入下面这一串</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &#x27;关轶&#x27; </span><br><span class="line">git config --global user.email &#x27;13339651+guan_yi@user.noreply.gitee.com&#x27;</span><br></pre></td></tr></table></figure></div>
<p>其中<strong>关轶</strong>是你的用户名,而<strong><a class="link"   href="mailto:&#49;&#x33;&#x33;&#x33;&#57;&#54;&#53;&#x31;&#43;&#x67;&#117;&#97;&#x6e;&#x5f;&#x79;&#105;&#64;&#x75;&#115;&#x65;&#x72;&#x2e;&#x6e;&#x6f;&#x72;&#x65;&#x70;&#x6c;&#121;&#x2e;&#x67;&#105;&#116;&#x65;&#101;&#46;&#x63;&#111;&#109;" >&#49;&#x33;&#x33;&#x33;&#57;&#54;&#53;&#x31;&#43;&#x67;&#117;&#97;&#x6e;&#x5f;&#x79;&#105;&#64;&#x75;&#115;&#x65;&#x72;&#x2e;&#x6e;&#x6f;&#x72;&#x65;&#x70;&#x6c;&#121;&#x2e;&#x67;&#105;&#116;&#x65;&#101;&#46;&#x63;&#111;&#109; <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong>则是你的邮箱.<br><br>然后克隆至本地,cd到你想要克隆的位置,然后输入下面这一串</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone git@gitee.com:Guan_Yi/NineHeaven.git</span><br></pre></td></tr></table></figure></div>
<p>clone 后面的<strong><a class="link"   href="mailto:&#x67;&#105;&#x74;&#64;&#x67;&#105;&#116;&#101;&#x65;&#46;&#99;&#x6f;&#109;" >&#x67;&#105;&#x74;&#64;&#x67;&#105;&#116;&#101;&#x65;&#46;&#99;&#x6f;&#109; <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>:Guan_Yi&#x2F;NineHeaven.git</strong>是你的仓库地址.最后克隆成功后会是这样的:<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/13/Omsz56.jpg"
                      alt="TermuxGit"
                ><br><br></p>
<h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><p>如果你想在本地创建一个仓库,那么请先cd到你要创建仓库的位置,然后会把当前目录变成一个仓库</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure></div>
<p>不过你也可以这样,与上面的命令不同的是,下面这条命令是在当前的目录下新建一个仓库.</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init [project-name]</span><br></pre></td></tr></table></figure></div>
<h1 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h1>]]></content>
      <categories>
        <category>编程</category>
        <category>环境配置</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Termux</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Git基础教程</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E5%91%BD%E4%BB%A4/Git/Git%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>本文参考以下文章:</p>
<ul>
<li><a class="link"   href="https://oschina.gitee.io/learn-git-branching/" >Git命令学习 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>Git基础命令</p>
<ul>
<li><h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2></li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">git commit</span><br></pre></td></tr></table></figure></div>
<ul>
<li><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2></li>
</ul>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure></div>
<ul>
<li><h2 id=""><a href="#" class="headerlink" title=""></a></h2></li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
        <category>命令</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>基础教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 编译环境配置</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Linux/Linux%20%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><blockquote>
<ul>
<li><a href="#C++">C++</a></li>
<li><a href="#C">C</a><blockquote>
<ul>
<li><a href="#Linux-c%E8%AF%AD%E8%A8%80%E7%BB%88%E7%AB%AF%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B">Linux C语言终端编译环境配置教程</a><blockquote>
<ul>
<li><a href="#clang%E7%BC%96%E8%AF%91">Clang编译</a></li>
<li><a href="#gcc%E7%BC%96%E8%AF%91">gcc编译</a></li>
<li><a href="#%E6%B5%8B%E8%AF%95">测试</a></li>
</ul>
</blockquote>
</li>
<li><a href="#linux-c%E8%AF%AD%E8%A8%80%E6%A1%8C%E9%9D%A2%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B">Linux C语言桌面编译环境配置教程</a></li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
<h1 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h1><p>安装g++</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install g++</span><br></pre></td></tr></table></figure></div>
<p>然后出现类似于下面这个图片里的内容,就说明你已经安装成功了.<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/09/OmyKeb.png"
                      alt="c language version"
                ><br>随后让我们在终端里尝试一下,能不能成功.<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">touch 文件名</span><br></pre></td></tr></table></figure></div>
<p>然后使用vim来进行编辑源文件,当然如果你有别的编辑器,例如nano之类的,就输入<strong>nano 文件名</strong>来进行编辑.<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim 文件名</span><br></pre></td></tr></table></figure></div>
<p>编辑好以后,输入<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">g++ 文件名 -o 可执行文件名</span><br></pre></td></tr></table></figure></div>
<p>然后我们运行你的程序<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">./可执行文件名</span><br></pre></td></tr></table></figure></div>

<h1 id="C-1"><a href="#C-1" class="headerlink" title="C"></a>C</h1><h2 id="Linux-C语言终端编译环境配置教程"><a href="#Linux-C语言终端编译环境配置教程" class="headerlink" title="Linux C语言终端编译环境配置教程"></a>Linux C语言终端编译环境配置教程</h2><h3 id="clang编译"><a href="#clang编译" class="headerlink" title="clang编译"></a>clang编译</h3><p>Termux.<br><br>Termux如果不安装完整系统是无法安装gcc和g++的,如果你要使用这些编译环境,那么有两种办法.<br><br><a class="link"   href="https://zhuanlan.zhihu.com/p/92161002" >Aid Learning <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">pkg install clang</span><br></pre></td></tr></table></figure></div>

<p>Ubuntu</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install clang</span><br></pre></td></tr></table></figure></div>

<h3 id="gcc编译"><a href="#gcc编译" class="headerlink" title="gcc编译"></a>gcc编译</h3><p>Ubuntu</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install gcc</span><br></pre></td></tr></table></figure></div>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>随后检查一下版本.<br><br>如果你是clang就输入 <strong>clang –version</strong><br><br>如果你是gcc就输入 <strong>gcc –version</strong><br><br>然后出现类似于下面这个图片里的内容,就说明你已经安装成功了.<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/09/OmyKeb.png"
                      alt="c language version"
                ><br>随后让我们在终端里尝试一下,能不能成功.<br><br>先输入 <strong>touch 文件名</strong><br><br>然后<strong>vim 文件名</strong> ,如果没有vim,那就用下面这个命令安装一下<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install vim</span><br></pre></td></tr></table></figure></div>

<p>进入到vim的界面后,输入 <strong>i</strong> 进行编辑.<br><br>编辑完成后,按 <strong>esc</strong> ,然后输入 <strong>:wq</strong>,然后回车,就可以退出vim的界面了.<br><br>随后是编译,如果你是clang,就输入 <strong>clang 文件名 -o 可执行文件名</strong><br><br>如果你是gcc,就输入 <strong>gcc 文件名 -o 可执行文件名</strong><br><br>随后输入.&#x2F;可执行文件名<br><br>随后,你就可以看到输出了.<br></p>
<h2 id="Linux-C语言桌面编译环境配置教程"><a href="#Linux-C语言桌面编译环境配置教程" class="headerlink" title="Linux C语言桌面编译环境配置教程"></a>Linux C语言桌面编译环境配置教程</h2><p>在 <strong>Android</strong> 上,如果你用的是termux,在安装完整版的linux之后请跟着这个教程 <strong><a class="link"   href="https://blog.guanyi.lol/2024/04/19/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Android/Linux%20on%20Android%20%E7%9A%84%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/" >Linux for Android的桌面环境配置 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong><br><br>如果你用的是Aid Learning,那么请看这个教程 <strong><a class="link"   href="https://docs.aidlux.com/#/" >AidLux文档 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong><br></p>
<hr>
<p>首先,我们下载一个vscode,这是我认为比较好用的编辑器,当然你也可以用其他的编辑器.<br><br>下载完成后,使用 <strong>cd</strong> 命令cd到你存放vscode安装包的目录,然后输入<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i 安装包名</span><br></pre></td></tr></table></figure></div>
<p>等到安装完成后,渠道你的应用列表.找到Visual Studio Code,点击进去,你会看到这个界面.<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/09/OmyPWa.png"
                      alt="VSCode"
                ><br>然后点击左边的四个方框,进入扩展界面,搜索Chinese<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/09/OmytsN.png"
                      alt="VScode"
                ><br>点击install<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/09/OmyRyS.png"
                      alt="VScode"
                ><br>在右下角会出现一个change language and restart,点击它,随后vscode会重启,重启过后就是中文了.<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/09/OmyDaC.png"
                      alt="VScode"
                ><br>点击打开文件夹,随意你选一个文件夹.<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/09/OmyHeL.png"
                      alt="VScode"
                ><br>把信任父文件夹中的所有文件夹打勾,然后点击是,我信任此作者.<br>随后新建一个文件,输入代码.<br><br>随后点击右上角的三角形.<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/09/OmyEIX.png"
                      alt="VScode"
                ><br>选择第一个.<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/09/OmyQht.png"
                      alt="VScode"
                ><br>在下面的终端里,你就可以看见你输出的东西了.</p>
]]></content>
      <categories>
        <category>编程</category>
        <category>环境配置</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>编译环境</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows on Android 的安装教程</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Android/Windows%20on%20Android%20%E7%9A%84%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>本文参考以下文章<br><br>那就是没有参考文章,全是官方文档.<br><br><del>所以,这篇文章就不写了.</del>(滑稽)<br></p>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h1 id="要用到的东西"><a href="#要用到的东西" class="headerlink" title="要用到的东西"></a>要用到的东西</h1>]]></content>
      <categories>
        <category>编程</category>
        <category>环境配置</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>WOA</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux on Android 的环境配置</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Android/Linux%20on%20Android%20%E7%9A%84%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>本文参考以下文章：</p>
<ul>
<li><a class="link"   href="https://www.sqlsec.com/2018/05/termux.html" >Termux 高级终端安装使用配置教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br></li>
<li><a class="link"   href="https://www.runoob.com/linux/linux-comm-apt.html" >Linux教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br></li>
<li><a class="link"   href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html" >curl用法指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br></li>
</ul>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><blockquote>
<ul>
<li><a href="#%E7%BB%88%E7%AB%AF%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE">终端环境配置</a><blockquote>
<ul>
<li><a href="#%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86">基础知识</a><blockquote>
<ul>
<li><a href="#Root%E6%9D%83%E9%99%90">Root权限</a><blockquote>
<ul>
<li><a href="#%E6%9C%89root">有Root</a></li>
<li><a href="#%E6%97%A0root">无Root</a></li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
</li>
<li><a href="#%E5%89%8D%E7%BD%AE%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C">前置准备工作</a><blockquote>
<ul>
<li><a href="#%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE">基础配置</a><blockquote>
<ul>
<li><a href="#%E5%91%BD%E4%BB%A4">命令</a></li>
</ul>
</blockquote>
</li>
<li><a href="#%E6%8D%A2%E6%BA%90">换源</a><blockquote>
<ul>
<li><a href="#%E7%AE%80%E5%8D%95%E6%8D%A2%E6%BA%90">简单换源</a></li>
<li><a href="#%E5%85%B6%E4%BB%96%E6%8D%A2%E6%BA%90">其他换源</a></li>
</ul>
</blockquote>
</li>
<li><a href="#Termux%E7%BE%8E%E5%8C%96">Termux美化</a><blockquote>
<ul>
<li><a href="#%E7%BB%88%E7%AB%AF%E7%BE%8E%E5%8C%96">终端美化</a></li>
<li><a href="#%E6%8C%89%E9%94%AE%E6%9B%B4%E6%94%B9%E5%8F%8A%E4%BF%AE%E6%94%B9%E9%97%AE%E5%80%99%E8%AF%AD">按键更改及修改问候语</a></li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
</li>
<li><a href="#%E6%A1%8C%E9%9D%A2%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE">桌面环境配置</a></li>
<li><a href="#%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85">脚本安装</a></li>
<li><a href="#%E8%87%AA%E8%A1%8C%E5%AE%89%E8%A3%85">自行安装</a></li>
<li><a href="#%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE">编译环境配置</a></li>
</ul>
</blockquote>
<h1 id="终端环境配置"><a href="#终端环境配置" class="headerlink" title="终端环境配置"></a>终端环境配置</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h3 id="Termux分区"><a href="#Termux分区" class="headerlink" title="Termux分区"></a>Termux分区</h3><p>由于Termux的特殊性，所以和直接在真机上装的Linux中的分区是有些细微的小差别。<br></p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$HOME</span></span><br><span class="line">/data/data/com.termux/files/home</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$PREFIX</span></span><br><span class="line">/data/data/com.termux/files/usr</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$TMPPREFIX</span></span><br><span class="line">/data/data/com.termux/files/usr/tmp/zsh</span><br></pre></td></tr></table></figure></div>
<h3 id="Root权限"><a href="#Root权限" class="headerlink" title="Root权限"></a>Root权限</h3><p><a class="link"   href="https://zh.wikipedia.org/wiki/Android" >Android <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 最初是基于 <a class="link"   href="https://zh.wikipedia.org/zh-hans/Linux%E5%86%85%E6%A0%B8" >Linux内核 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的一个系统，与 <a class="link"   href="https://zh.wikipedia.org/wiki/Linux" >Linux <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 相同的是Android系统里也拥有<a class="link"   href="https://baike.baidu.com/item/root/73226" >Root权限 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，只不过通常被厂家锁死，都是出厂没有Root权限的，一切都需要用户自己获取。简单些的手机可以通过打开开发者选项的oem选项后进行解 <a class="link"   href="https://www.bilibili.com/read/cv307758/" >BL锁 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 的操作，并不是打开后就拥有Root权限，在解开BL锁以后还需要刷入Magisk或者KSU获取Root权限，而困难些的手机需要强解BL锁，9008解锁等，不同的芯片解锁方式也稍有不同，解锁后的可玩性也不相同。<br><br>如果你不知道自己是否拥有Root权限，那么查看以下网址以及安装以下应用来确定。<br></p>
<blockquote>
<ul>
<li><a class="link"   href="https://t.me/magiskalpha/529" >MoMo4.4.1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br></li>
</ul>
</blockquote>
<h4 id="有Root"><a href="#有Root" class="headerlink" title="有Root"></a>有Root</h4><p>如果你的手机拥有Root权限,那么可以直接安装tsu来进入Root用户,输入下面的命令即可安装.<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">pkg install tsu</span><br></pre></td></tr></table></figure></div>
<p>当我们安装完成后会显示这样<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/02/15/OvXO4l.jpg"
                      alt="tsu1"
                ><br><br>随后输入 <strong>tsu</strong> 就会进入到Root，输入 <strong>exit</strong> 退出Root，如果是第一次使用ZeroTermux，并且是第一次使用tsu，就会提示是否授权Root权限,这时候给予Root权限就可以了。<br></p>
<h4 id="无Root"><a href="#无Root" class="headerlink" title="无Root"></a>无Root</h4><p>无root模拟root权限可以使用proot.<br><br>先在终端输入下面这个命令安装proot.<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">pkg install proot -y</span><br></pre></td></tr></table></figure></div>
<p>然后输入下面命令进入proot.<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">termux-chroot</span><br></pre></td></tr></table></figure></div>
<p>proot只是模拟,并不是真的root了,也别想拿这个root修改些Android系统文件<br><br>输入<strong>exit</strong>返回普通用户.<br></p>
<h2 id="前置准备工作"><a href="#前置准备工作" class="headerlink" title="前置准备工作"></a>前置准备工作</h2><blockquote>
<ul>
<li>Termux下载  <br><blockquote>
<p>Trmux是一个在Android当中的一个开源的Linux终端软件，这个软件即便没有Root权限也可以进行许多Linux操作。  <br></p>
<blockquote>
<ul>
<li><a class="link"   href="https://f-droid.org/zh_Hans/packages/com.termux/" >Termux F-Droid 下载地址 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://play.google.com/store/apps/details?id=com.termux&hl=en_US&gl=US" >Termux Google Play Store 下载地址 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>  <br><br>此外Termux还有第三方修改过的版本，例如ZeroTermux和UTermux。  <br><br>在此只推荐ZeroTermux，并不是很推荐原版Termux以及UTermux。<del>因为我没用过UTermux,原版的太难用了。</del>  <br><br>ZeroTermux截至2024年2月14日，推荐最新版本，也就是0.118.38的版本。<br>s<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/02/14/Ov65Xg.png"
                      alt="ZeroTermux0.118.38"
                ></li>
<li><a class="link"   href="https://od.ixcmstudio.cn/repository/main/ZeroTermux/" >ZeroTermux 下载地址 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://od.ixcmstudio.cn/utermux/UTermux%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC/" >UTermux 下载地址 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>  <br><br>除去Termux本体以外，还有许多Termux的 <strong>“插件”</strong> ，当然这些 <strong>“插件”</strong> 并不是必须的，同时在ZeroTermux当中也提供了非常方便的下载方式。  <br></li>
<li><a class="link"   href="https://f-droid.org/zh_Hans/packages/com.termux.api/" >Termux API <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://www.sqlsec.com/2018/05/termuxapi.html" >Termux API使用教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://f-droid.org/zh_Hans/packages/com.termux.boot/" >Termux Boot <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://f-droid.org/zh_Hans/packages/com.termux.styling/" >Termux Styling <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://f-droid.org/zh_Hans/packages/com.termux.tasker/" >Termux Tasker <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a href="">Termux X11</a></li>
<li><a class="link"   href="https://f-droid.org/zh_Hans/packages/com.termux.window/" >Termux Float <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
<li><a class="link"   href="https://f-droid.org/zh_Hans/packages/com.termux.widget/" >Termux Widget <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> <br></li>
</ul>
</blockquote>
</blockquote>
</li>
</ul>
</blockquote>
<h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><h4 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h4><p>命令是Linux当中不可缺少的部分.</p>
<h5 id="Linux命令"><a href="#Linux命令" class="headerlink" title="Linux命令"></a>Linux命令</h5><h5 id="apt常用命令"><a href="#apt常用命令" class="headerlink" title="apt常用命令"></a>apt常用命令</h5><blockquote>
<ul>
<li>apt update  (更新源)</li>
<li>apt search “keyword”  (查找软件包)</li>
<li>apt upgrade  (升级软件包)</li>
<li>apt list –installed  (列出所有已安装的包)</li>
<li>apt list –upgradeable  (列出所有可供更新的软件包)</li>
<li>apt full-upgrade (升级软件包，升级前先删除需要更新软件包)</li>
<li>apt install “package_name” (安装包)</li>
<li>apt install “package_1” “package_2” “package_3”  (安装多个软件包)</li>
<li>apt update “package_name”  (更新指定软件包)</li>
<li>apt remove “package_name”  (删除指定软件包)</li>
<li>apt show “package_name“  (显示指定软件包信息)</li>
<li>list –all-versions  (显示所有已安装的软件包的版本信息)</li>
<li>apt autoremove  (删除不再使用的依赖和库文件)</li>
<li>apt purge “package_name”  (移除软件包及配置文件)</li>
</ul>
</blockquote>
<h5 id="pkg常用命令"><a href="#pkg常用命令" class="headerlink" title="pkg常用命令"></a>pkg常用命令</h5><blockquote>
<ul>
<li>pkg search “query”  (搜索包)</li>
<li>pkg install “package_name”  (安装包)</li>
<li>pkg uninstall “package_name”  (卸载包)</li>
<li>pkg reinstall “package_name”  (重新安装包)</li>
<li>pkg update  (更新源)</li>
<li>pkg upgrade  (更新软件包)</li>
<li>pkg list-all  (列出所有可供安装的软件包)</li>
<li>pkg list-installed  (列出所有已安装的包)</li>
<li>pkg show “package_name”  (显示某一个包的详细信息)</li>
<li>pkg files “package_name”  (显示某一个包的相关文件夹路径)</li>
</ul>
</blockquote>
<h5 id="curl常用命令"><a href="#curl常用命令" class="headerlink" title="curl常用命令"></a>curl常用命令</h5><p>请参考阮一峰的这篇文章.<br></p>
<ul>
<li><a class="link"   href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html" >curl用法指南 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></li>
</ul>
<h3 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h3><p>换源是什么？<br></p>
<blockquote>
<p><strong>镜像源</strong> 大致可以理解为一个市场，而 <strong>镜像源</strong> 所在的位置不同，下载的速度也不同，由于我们是在中国，所以优先推荐清华源和北京源 <br></p>
</blockquote>
<h4 id="简单换源"><a href="#简单换源" class="headerlink" title="简单换源"></a>简单换源</h4><ol>
<li>先打开ZeroTermux。<br><br> 随后按一下音量加，就会进入到下面这个界面。<br><br> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/02/14/Ov6TzB.jpg"
                      alt="Step1"
                >  </li>
<li>随后点击切换源，点击后会出现下面这个界面<br><br> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/02/14/Ov6UJs.jpg"
                      alt="Step2"
                >  </li>
<li>然后随你心意去点击清华源或者北京源这两个源。<br><br> 当出现下面这个界面时，就代表着你已经开始换源了<br><br> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/02/14/Ov6wjx.jpg"
                      alt="Step3"
                ></li>
<li>接下来就是确认安装的环节<br><br> 一般在Linux下安装一些环境，软件等都是需要确认的，例如你使用的是Deepin系统那么就会要求你验证账户的密码.<br><br> 遇到以下的截图里的情况时，并不是网络问题也不是手机问题，而是需要确认<br><br> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/02/14/Ov8OUj.jpg"
                      alt="Step4"
                ><br> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/02/14/Ov8ayp.jpg"
                      alt="Step5"
                ><br> 如何确认呢，只需要输入Y并回车就可以了。<br><br> 如果换源成功，那么就会是这样的。<br><br> <img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/02/14/Ov8osU.jpg"
                      alt="Step6"
                ><br> 至此，简单换源这个步骤已经完成。<br></li>
</ol>
<h4 id="其他换源"><a href="#其他换源" class="headerlink" title="其他换源"></a>其他换源</h4><p> 如果上面的换源操作失败了,可以尝试一下<a class="link"   href="https://mirrors.tuna.tsinghua.edu.cn/help/termux/" >清华给出的教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.<br></p>
<h3 id="Termux美化"><a href="#Termux美化" class="headerlink" title="Termux美化"></a>Termux美化</h3><p>首先请输入下面这行命令来获取手机的存储权限<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">termux-steup-storage</span><br></pre></td></tr></table></figure></div>
<h4 id="终端美化"><a href="#终端美化" class="headerlink" title="终端美化"></a>终端美化</h4><p>默认的终端非常难看，所以可以尝试以下美化终端。<br><br>请输入下面这行命令<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)&quot;  </span><br></pre></td></tr></table></figure></div>
<p>如果出现 <strong>“port 443: Connection refused”</strong> 这样的情况，请使用代理。<br><br>或者使用国光提供的地址<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://html.sqlsec.com/termux-install.sh)&quot;  </span><br></pre></td></tr></table></figure></div>

<p>当然你可以更改主题，只需要在home路径下vim .zshrc，并把开头的ZSH_THEME&#x3D;”xxx”里的xxx更改为你想要改变的主题文件名就可以了。<br><br>主题位置在 <strong>“&#x2F;home&#x2F;.oh-my-zsh&#x2F;themes”</strong> 里<br><br>如果你想更改字体，请输入<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">~/.termux/colors.sh</span><br></pre></td></tr></table></figure></div>
<p>如果你想更改色彩样式，请输入<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">~/.termux/fonts.sh</span><br></pre></td></tr></table></figure></div>

<h4 id="按键更改及修改问候语"><a href="#按键更改及修改问候语" class="headerlink" title="按键更改及修改问候语"></a>按键更改及修改问候语</h4><p>请参考国光的教程<a class="link"   href="https://www.sqlsec.com/2018/05/termux.html#%E5%AE%9A%E5%88%B6%E5%B8%B8%E7%94%A8%E6%8C%89%E9%94%AE" >定制常用按键 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br></p>
<h1 id="桌面环境配置"><a href="#桌面环境配置" class="headerlink" title="桌面环境配置"></a>桌面环境配置</h1><p>有的时候我们不单单需要终端环境，某些时候也需要桌面环境，例如当我们要看视频的时候,或者装逼的时候.<strong>桌面环境不是必须的,选择安装</strong><br></p>
<h2 id="脚本安装"><a href="#脚本安装" class="headerlink" title="脚本安装"></a>脚本安装</h2><h2 id="自行安装"><a href="#自行安装" class="headerlink" title="自行安装"></a>自行安装</h2><h1 id="编译环境配置"><a href="#编译环境配置" class="headerlink" title="编译环境配置"></a>编译环境配置</h1><blockquote>
<ul>
<li>在安装完成基础的环境配置之后，可以参考下面的文章进行更进一步的进阶操作。<br><blockquote>
<ul>
<li><a class="link"   href="https://blog.guanyi.lol/2024/04/19/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Linux/Linux%20C++%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/" >Linux 编译环境配置 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><a href="/HTML/love/love.html">Linux编译环境配置</a></li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>编程</category>
        <category>环境配置</category>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Termux</tag>
        <tag>Android</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows的桌面编译环境配置</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Windows/Windowss%E7%9A%84%E6%A1%8C%E9%9D%A2%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<hr>
<p>本文参考以下文章:</p>
<ul>
<li><a href="">Windows</a></li>
</ul>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><blockquote>
<ul>
<li><a href="#c%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83">C语言编译环境</a></li>
<li><a href="#c%E8%AF%AD%E8%A8%80%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83">C++编译环境</a></li>
<li><a href="#html">HTML</a></li>
<li><a href="#java">Jave</a></li>
<li><a href="#nodejs">Node.js</a></li>
<li><a href="#python">Python</a></li>
<li><a href="#%E6%B5%8B%E8%AF%95">测试</a></li>
</ul>
</blockquote>
<p>Windows的编译环境很简单,如果你是Python或者C++或C,可以直接下载微软的Visual Studio Community,就可以直接使用了,如果你需要在命令提示符里进行,那么请看 <a class="link"   href="https://blog.guanyi.lol/2024/04/19/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Windows/Windows%E7%9A%84%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/" >Windows的命令提示符编译环境配置 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><br>Visual Studio Community的安装请选择供学生,开放源代码和个人免费使用的那个,如下图所示.,选择第三个.<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/10/OmJSwv.png"
                      alt="Visual"
                ></p>
<h1 id="C语言编译环境"><a href="#C语言编译环境" class="headerlink" title="C语言编译环境"></a>C语言编译环境</h1><p>C语言的勾选和C++差不多,就不说了.</p>
<h1 id="C-编译环境配置"><a href="#C-编译环境配置" class="headerlink" title="C++编译环境配置"></a>C++编译环境配置</h1><p>在Visual Studio Community中勾选,当然你可以根据自己需求去勾选.<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/10/OmJrkB.png"
                      alt="C++"
                ><br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/10/OmJAms.png"
                      alt="C++"
                ><br></p>
<h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><p>Node.js请勾选这个<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/10/OmJc1q.png"
                      alt="Node.js"
                ></p>
<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><p>HTML可以直接拿浏览器看,就不说了.</p>
<h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><p>Python请勾选这个<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/10/OmJc1q.png"
                      alt="Python"
                ></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>接下来我们进行一下测试,就拿C语言好了.<br><br>先点击创建新项目<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/10/OmPrLq.png"
                      alt="新项目"
                ><br>然后选择C++<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/10/OmPAXc.png"
                      alt="选择"
                ><br>然后点击空项目<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/10/OmPZzr.png"
                      alt="空项目"
                ><br>随后的这些选择一个喜欢的就行<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/10/OmPmT1.png"
                      alt="名称"
                ><br>然后右边点击源文件,添加,新建项.<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/10/OmPt76.png"
                      alt="新建"
                ><br>当我们输入完代码后点击上方的本地windows调试器<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/10/OmP50S.png"
                      alt="测试"
                ><br>随后在出现的命令提示符里,就是你的代码输出了<br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/10/OmP4LP.png"
                      alt="输出"
                ></p>
]]></content>
      <categories>
        <category>编程</category>
        <category>环境配置</category>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>编译环境</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows上制作Linux to go</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/Windows/%E5%9C%A8Windows%E4%B8%8A%E5%88%B6%E4%BD%9CLinux%20to%20go/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>这是一篇将Linux装到U盘的笔记,只介绍了我成功的过程,如果你在制作的时候出现了别的问题,那么请先百度.</p>
<hr>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="1-一台搭载了Windows的电脑"><a href="#1-一台搭载了Windows的电脑" class="headerlink" title="1. 一台搭载了Windows的电脑"></a>1. 一台搭载了Windows的电脑</h2><p>2023年，除苹果外绝大部份电脑搭载的都是Windows系统，如果不清楚，则可以去设置里找到关于设备里查看。</p>
<h2 id="2-一个不低于8G的U盘"><a href="#2-一个不低于8G的U盘" class="headerlink" title="2. 一个不低于8G的U盘"></a>2. 一个不低于8G的U盘</h2><p>这个U盘没有速度要求，一般来说只是一个启动盘。</p>
<h2 id="3-一个Linux镜像"><a href="#3-一个Linux镜像" class="headerlink" title="3. 一个Linux镜像"></a>3. 一个Linux镜像</h2><p>如果没有Linux镜像，去这里<br>社区人比较多的应该是Ubuntu和Debian，也可以使用国产的深度操作系统，也就是Deepin，Deepin是基于Debian的，所以理论Debian论坛也可以使用。</p>
<h2 id="4-一个3-0以上的U盘-虚拟机"><a href="#4-一个3-0以上的U盘-虚拟机" class="headerlink" title="4. 一个3.0以上的U盘&#x2F;虚拟机"></a>4. 一个3.0以上的U盘&#x2F;虚拟机</h2><h3 id="U盘"><a href="#U盘" class="headerlink" title="U盘"></a>U盘</h3><p>一般3.0的U盘都是蓝口的，就像这样<br>![[Obsidian附件&#x2F;IMG_2023-06-30-23-47-08-121.jpg]]<br>当然如果不确定的话，可以用软件来测试<br>CrystalDiskMark<br><a class="link"   href="https://crystalmark.info/en/software/crystaldiskmark/" >https://crystalmark.info/en/software/crystaldiskmark/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>具体速度要求大概是这样<br>![[Obsidian附件&#x2F;6_96ANA4WNNUCH5UE.png]]<br>读取达到100，写入达到50。<br>说不定读取100，写入30也可以。<br>SD卡加转接器也可以。</p>
<h3 id="虚拟机"><a href="#虚拟机" class="headerlink" title="虚拟机"></a>虚拟机</h3><p>使用Virtualbox<br><a class="link"   href="https://www.virtualbox.org/" >https://www.virtualbox.org/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<hr>
<h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><h3 id="U盘启动盘"><a href="#U盘启动盘" class="headerlink" title="U盘启动盘"></a>U盘启动盘</h3>]]></content>
      <categories>
        <category>教程</category>
      </categories>
  </entry>
  <entry>
    <title>hexo建站从入门到入土</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E7%BD%91%E7%BB%9C/%E5%BB%BA%E7%AB%99/hexo%E5%BB%BA%E7%AB%99%E6%95%99%E7%A8%8B/hexo%E5%BB%BA%E7%AB%99%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><blockquote>
<ul>
<li><a href="#hexo%E5%85%A5%E9%97%A8">hexo入门</a><blockquote>
<ul>
<li><a href="#git%E5%92%8Cnodejs%E7%9A%84%E5%AE%89%E8%A3%85">git和nodejs的安装</a></li>
<li><a href="#hexo%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85">hexo主题安装</a></li>
<li><a href="#hexo%E6%96%87%E7%AB%A0%E7%BC%96%E5%86%99">hexo文章编写</a></li>
<li><a href="#hexo%E6%9C%AC%E5%9C%B0%E9%A2%84%E8%A7%88">hexo本地预览</a></li>
<li><a href="#hexo%E9%83%A8%E7%BD%B2%E5%88%B0github">hexo部署到github</a></li>
</ul>
</blockquote>
</li>
<li><a href="#hexo%E8%BF%9B%E9%98%B6">hexo进阶</a><blockquote>
<ul>
<li><a href="#hexo%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98">hexo自定义主题</a></li>
<li><a href="#hexo%E6%8F%92%E4%BB%B6">hexo插件</a></li>
<li><a href="#hexo%E5%A4%9A%E8%AF%AD%E8%A8%80%E6%94%AF%E6%8C%81">hexo多语言支持</a></li>
<li><a href="#hexo%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86">hexo图片处理</a></li>
<li><a href="#hexo%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F">hexo评论系统</a></li>
<li><a href="#hexo%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90">hexo统计分析</a></li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
<h1 id="hexo入门"><a href="#hexo入门" class="headerlink" title="hexo入门"></a>hexo入门</h1><h2 id="Git和Node-js的安装"><a href="#Git和Node-js的安装" class="headerlink" title="Git和Node.js的安装"></a>Git和Node.js的安装</h2><p>首先需要安装Node.js和git.<br><br>Windows用户呢直接Google一下node.js和git安装就可以了<br><br>Debian系的用户呢使用下面的命令安装:<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git-core</span><br></pre></td></tr></table></figure></div>
<p>node.js安装<br></p>
<h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y curl</span><br><span class="line">curl -fsSL https://deb.nodesource.com/setup_22.x -o nodesource_setup.sh</span><br><span class="line">sudo -E bash nodesource_setup.sh</span><br><span class="line">sudo apt-get install -y nodejs</span><br><span class="line">node -v</span><br></pre></td></tr></table></figure></div>
<h3 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install -y curl</span><br><span class="line">curl -fsSL https://deb.nodesource.com/setup_22.x -o nodesource_setup.sh</span><br><span class="line">bash nodesource_setup.sh</span><br><span class="line">apt-get install -y nodejs</span><br><span class="line">node -v</span><br></pre></td></tr></table></figure></div>
<h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>先cd到一个空文件夹,如果文件夹不是空的会初始化失败.<br><br>输入下面的命令安装<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></div>
<p>输入下面的命令进行初始化<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></div>
<p>然后你的文件夹里会多出来一堆文件,就像下面的图片里一样<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/06/18/OPqCTp.png"
                      alt="hexo初始化"
                ><br></p>
<h2 id="hexo主题安装"><a href="#hexo主题安装" class="headerlink" title="hexo主题安装"></a>hexo主题安装</h2><p>如果你觉得默认的主题不是很好看的话也可以去使用别人的主题<a class="link"   href="https://hexo.io/themes/" >hexo主题 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>,然后按照主题文档进行安装就是了,大致的安装流畅都是一样的,只有配置文件是不同的.或者你也可以自己开发一个主题,前提是你对于前端有一个基本的认知,如果有一丢丢,那么可以尝试<a href="#hexo%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98">hexo自定义主题</a><br></p>
<h2 id="hexo文章编写"><a href="#hexo文章编写" class="headerlink" title="hexo文章编写"></a>hexo文章编写</h2><p>想要编写一篇文章,首先你需要有一个编辑器,推荐就是随便,你爱用哪个用哪个.<br><br>然后在你初始化hexo的文件夹里找到source&#x2F;_posts文件夹,然后新建一个文件,或者新建一个文件夹,在文件夹里再新建一个文件,文件后缀就是.md.<br><br>然后文本用的是MD的语法,所以可以去下面的教程里学习一下,我个人认为这是比较全面的MD教程.<br><br><a class="link"   href="https://publish.obsidian.md/csj-obsidian/0+-+Obsidian/Markdown/Markdown%E8%B6%85%E7%BA%A7%E6%95%99%E7%A8%8B+Obsidian%E7%89%88" >Markdown语法教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br></p>
<h2 id="hexo本地预览"><a href="#hexo本地预览" class="headerlink" title="hexo本地预览"></a>hexo本地预览</h2><p>输入下面的命令启动hexo本地预览<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></div>
<p>如果你发现界面内容没有更改的话,可以先输入<strong>hexo clean</strong>清除缓存,然后再输入<strong>hexo g</strong>重新生成静态文件后再输入<strong>hexo s</strong>启动本地预览.<br></p>
<h2 id="hexo部署到github"><a href="#hexo部署到github" class="headerlink" title="hexo部署到github"></a>hexo部署到github</h2><p>你需要在github上新建一个仓库,然后把仓库的名字改成<strong>username.github.io</strong>,.<br><br>然后你需要在你的hexo博客目录下输入下面的命令<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure></div>
<p>然后你会发现你的hexo博客已经部署成功了.<br></p>
<h1 id="hexo进阶"><a href="#hexo进阶" class="headerlink" title="hexo进阶"></a>hexo进阶</h1><h2 id="hexo自定义主题"><a href="#hexo自定义主题" class="headerlink" title="hexo自定义主题"></a>hexo自定义主题</h2><p>自定义主题可以通过现有的主题进行一个自定义,一般hexo主题都带有自定义主题的文档,如果你不熟悉前端,那么可以先去了解一下前端的一些基本知识.<br><br>也可以直接自己从零开始做一个主题,但是这样对于零基础的一些人群来说可能会比较惨,因为要从零开始学前端.<br></p>
]]></content>
      <categories>
        <category>学习</category>
        <category>网络</category>
        <category>建站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>建站</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML入门</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E8%AF%AD%E8%A8%80/%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80/HTML/HTML%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h2 id="本文参考以下文章"><a href="#本文参考以下文章" class="headerlink" title="本文参考以下文章:"></a>本文参考以下文章:</h2><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>- </p>
<h2 id="第一个HTML代码"><a href="#第一个HTML代码" class="headerlink" title="第一个HTML代码"></a>第一个HTML代码</h2><pre><code>
</code></pre>
]]></content>
      <categories>
        <category>编程</category>
        <category>语言</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>基础教程</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript入门</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E8%AF%AD%E8%A8%80/%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80/JavaScript/JS%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>本文参考以下文章:</p>
<ul>
<li><a class="link"   href="https://www.liaoxuefeng.com/wiki/1022910821149312" >廖雪峰JavaScript全栈教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br></li>
<li><a class="link"   href="https://www.runoob.com/js/js-tutorial.html" >菜鸟教程JavaScript教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br><br>要看JavaScript历史的请转至廖雪峰的教程.或菜鸟教程,本文仅是一个对于各位大佬的学习笔记,许多都是照搬的,仅对我个人觉得有难度的部分进行笔记.<br><br>JavaScrpit可以在任何网页内运行.但JavaScrpit可能不能单独运行,因为我没看见能单独运行.<br></li>
</ul>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul>
<li><a href="#%E7%AC%AC%E4%B8%80%E4%B8%AAjavascrpit%E4%BB%A3%E7%A0%81">第一个JavaScript代码</a></li>
</ul>
<h2 id="第一个JavaScript代码"><a href="#第一个JavaScript代码" class="headerlink" title="第一个JavaScript代码"></a>第一个JavaScript代码</h2><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">alert(&#x27;Hello&#x27;);</span><br></pre></td></tr></table></figure></div>
<p>上面这段代码的作用是在浏览器弹出一个提示,提示的内容是Hello,让我想起了C语言当中的printf(“Hello”);一样都是用来输出些什么的.<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">var a = 2 - 1 + 3 / 2;</span><br><span class="line">console.log(a);</span><br></pre></td></tr></table></figure></div>
<p>上面这段代码的作用是创建一个变量a,经过计算后,通过console.log(‘a’);来输出,var就像是C语言当中的int,用来定义一个变量,a就是变量名,console.log的作用就像是prnitf(“%d”,a);一样.<br><br>加上单引号,例如<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(&#x27;Hello&#x27;);</span><br></pre></td></tr></table></figure></div>
<p>输出的结果就是Hello.<br><br><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://ooo.0x0.ooo/2024/04/20/OpUhdF.png"
                      alt="console.log(a);"
                ><br>可以见得,结果是2.5.<br>那么如何运行代码呢,可以在<a class="link"   href="https://www.liaoxuefeng.com/wiki/1022910821149312" >廖雪峰JavaScript全栈教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>或<br><a class="link"   href="https://www.runoob.com/js/js-tutorial.html" >菜鸟教程JavaScript教程 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>里进行测试,也可以直接去我搭建的一个页面进行测试,<a href="">测试</a>,按F12进入开发工具,在控制台中写入你的JavaScript代码.<br></p>
<h2 id="JavaScript基础语法"><a href="#JavaScript基础语法" class="headerlink" title="JavaScript基础语法"></a>JavaScript基础语法</h2><h3 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">var a = 1; //也可以在一行内赋值</span><br><span class="line">var b = 2; var c = 3;</span><br></pre></td></tr></table></figure></div>
<h3 id="语句块"><a href="#语句块" class="headerlink" title="语句块"></a>语句块</h3><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (a &lt; b)&#123;</span><br><span class="line">    a = 2</span><br><span class="line">    b = 3</span><br><span class="line">    c = 4</span><br><span class="line">&#125;</span><br><span class="line">//也可以进行嵌套.</span><br><span class="line">if (a &lt; b)&#123;</span><br><span class="line">    a = 1</span><br><span class="line">    b = 2</span><br><span class="line">    c = 3</span><br><span class="line">    if (c &gt; b)&#123;</span><br><span class="line">        b = 3</span><br><span class="line">        c = 4</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//嵌套适可而止.</span><br></pre></td></tr></table></figure></div>
<p>‘Hello’;也可以被当作一个代码,输出Hello</p>
<h2 id="数据类型和变量"><a href="#数据类型和变量" class="headerlink" title="数据类型和变量"></a>数据类型和变量</h2><h3 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h3><p>JavaScript不区分整数和浮点数，统一用Number表示，以下都是合法的Number类型<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">123; // 整数123</span><br><span class="line">0.456; // 浮点数0.456</span><br><span class="line">1.2345e3; // 科学计数法表示1.2345x1000，等同于1234.5</span><br><span class="line">-99; // 负数</span><br><span class="line">NaN; // NaN表示Not a Number，当无法计算结果时用NaN表示</span><br><span class="line">Infinity; // Infinity表示无限大，当数值超过了JavaScript的Number所能表示的最大值时，就表示为Infinity</span><br></pre></td></tr></table></figure></div>
<p>计算机由于使用二进制，所以，有时候用十六进制表示整数比较方便，十六进制用0x前缀和0-9，a-f表示，例如：0xff00，0xa5b4c3d2，等等，它们和十进制表示的数值完全一样。<br></p>
<p>Number可以直接做四则运算，规则和数学一致：<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 + 2; // 3</span><br><span class="line">(1 + 2) * 5 / 2; // 7.5</span><br><span class="line">2 / 0; // Infinity</span><br><span class="line">0 / 0; // NaN</span><br><span class="line">10 % 3; // 1</span><br><span class="line">10.5 % 3; // 1.5</span><br></pre></td></tr></table></figure></div>
<p>注意%是求余运算。<br></p>
<p>要注意，JavaScript的Number不区分整数和浮点数，也就是说，12.00 &#x3D;&#x3D;&#x3D; 12。（在大多数其他语言中，整数和浮点数不能直接比较）并且，JavaScript的整数最大范围不是±263，而是±253，因此，超过253的整数就可能无法精确表示：<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 打印Number能表示的最大整数:</span><br><span class="line">console.log(Number.MAX_SAFE_INTEGER);</span><br><span class="line">// 9007199254740991</span><br></pre></td></tr></table></figure></div>
<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>字符串是以单引号’或双引号”括起来的任意文本，比如’abc’，”xyz”等等。请注意，’’或””本身只是一种表示方式，不是字符串的一部分，因此，字符串’abc’只有a，b，c这3个字符。<br><br>因此,在上面所提到的代码当中,单引号’,是可以替换成双引号”的,例如:<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(&#x27;Hello&#x27;);</span><br></pre></td></tr></table></figure></div>
<p>可以替换成</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.log(&quot;Hello&quot;);</span><br></pre></td></tr></table></figure></div>
<h3 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h3><p>第一次看到这个布尔值,也许不是第一次,可能我忘了,我小脑萎缩了,根据廖雪峰大佬的教程,是这样的:<br><br>布尔值和布尔代数的表示完全一致，一个布尔值只有true、false两种值，要么是true，要么是false，可以直接用true、false表示布尔值，也可以通过布尔运算计算出来：<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">true; // 这是一个true值</span><br><span class="line">false; // 这是一个false值</span><br><span class="line">2 &gt; 1; // 这是一个true值</span><br><span class="line">2 &gt;= 3; // 这是一个false值</span><br></pre></td></tr></table></figure></div>
<h4 id="运算是与运算"><a href="#运算是与运算" class="headerlink" title="&amp;&amp;运算是与运算"></a>&amp;&amp;运算是与运算</h4><p>只有所有都为true，&amp;&amp;运算结果才是true：<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">true &amp;&amp; true; // 这个&amp;&amp;语句计算结果为true</span><br><span class="line">true &amp;&amp; false; // 这个&amp;&amp;语句计算结果为false</span><br><span class="line">false &amp;&amp; true &amp;&amp; false; // 这个&amp;&amp;语句计算结果为false</span><br></pre></td></tr></table></figure></div>
<h4 id="运算是或运算"><a href="#运算是或运算" class="headerlink" title="||运算是或运算"></a>||运算是或运算</h4><p>只要其中有一个为true，||运算结果就是true：<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">false || false; // 这个||语句计算结果为false</span><br><span class="line">true || false; // 这个||语句计算结果为true</span><br><span class="line">false || true || false; // 这个||语句计算结果为true</span><br></pre></td></tr></table></figure></div>
<h4 id="运算是非运算"><a href="#运算是非运算" class="headerlink" title="!运算是非运算"></a>!运算是非运算</h4><p>它是一个单目运算符，把true变成false，false变成true：<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">! true; // 结果为false</span><br><span class="line">! false; // 结果为true</span><br><span class="line">! (2 &gt; 5); // 结果为true</span><br></pre></td></tr></table></figure></div>
<p>布尔值经常用在条件判断中，比如：<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">var age = 15;</span><br><span class="line">if (age &gt;= 18) &#123;</span><br><span class="line">    alert(&#x27;adult&#x27;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    alert(&#x27;teenager&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>好,那么通过我的理解,将true理解为1,false理解为0,true就是通过,false就是不通过.<br><br>2 &gt; 1;是一个true值,为什么呢?<br><br>这是因为2 &gt; 1的条件成立,2 &gt; 1,说的是真的,因此是一个true值.<br><br>2 &gt;&#x3D; 3;是一个false值,为什么呢<br><br>这是因为2 &gt;&#x3D; 3的条件不成立,说的是假的,因此这是一个false值.<br><br>也就是说,桌子上有两个苹果,如果我说这桌子上的苹果大于一个,那么别人是认同的,也就是<strong>2 &gt; 1;</strong><br><br>如果我说,这个桌子上的苹果有三个或者三个以上,那么别人是不认同的,也就是<strong>2 &gt;&#x3D; 3</strong><br><br>要想让别人认同,需要把说法换成这个桌子上的苹果小于或者等于两个,也就是<br><br><strong>2 &lt;&#x3D; 3</strong></p>
<p>那&amp;&amp;又是什么情况呢?<br><br>&amp;&amp;就是让所有的比较都是事实,才可以通过<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">true &amp;&amp; true; // 这个&amp;&amp;语句计算结果为true</span><br><span class="line">true &amp;&amp; false; // 这个&amp;&amp;语句计算结果为false</span><br><span class="line">false &amp;&amp; true &amp;&amp; false; // 这个&amp;&amp;语句计算结果为false</span><br></pre></td></tr></table></figure></div>
<p>上面这段代码,可以理解为:<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 &gt; 1 &amp;&amp; 2 = 2 // 这个&amp;&amp;语句计算结果为true</span><br><span class="line">2 &gt; 1 &amp;&amp; 2 &gt;= 3 // 这个&amp;&amp;语句计算结果为false</span><br><span class="line">2 &gt;= 3 &amp;&amp; 2 &gt; 1 &amp;&amp; 2 &gt;= 4 // 这个&amp;&amp;语句计算结果为false</span><br></pre></td></tr></table></figure></div>
<p>可以看到只有当描述正确时,才能通过.<br><br>换成自然语言呢,就是:<br><br>桌子上的两个苹果大于一个,桌子上的苹果等于两个<br><br>桌子上的两个苹果大于一个,桌子上的两个苹果大于或等于三个<br><br>桌子上的两个苹果大于或等于三个,桌子上的两个苹果大于一个,桌子上的苹果大于或等于四个<br><br>分别对应了true,false,只有当所有的值都是true时,最后才会给你通过<br><br>打个比方,我现在回家,我家有两个门,一个防盗门,一个木门,木门紧贴着防盗门,现在我需要先打开防盗门,再打开木门,我有很多钥匙,一时半会,可能会插错了这个,插错了哪个,只有当找对钥匙时,我才能进门,这就是&amp;&amp;,只要有一个值是false,就回不了家.<br></p>
<p>那||又是什么呢,根据上面的比方,我家现在也有两个门,但是位置不一样,一个是正门,一个是后门,我从哪个门进都行.这就是||,只要有一个值为true,就可以回家.<br></p>
<p>那!又是什么呢,还是上面的例子,但是这次和老婆吵架了,她把门都给你换了,这时,你虽然有钥匙,但是开的已经不是自家门了,这就是!,把有用变成没用.把没用变成有用.<br><br>根据上面的理解,我们可以写出一个年龄段代码.</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">var age = 17;</span><br><span class="line">if (age &lt; 18 &amp;&amp; age &gt;=16)&#123;</span><br><span class="line">    alert(&quot;恭喜你,可以进厂打工了&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if (age &gt;=18)&#123;</span><br><span class="line">    alert(&quot;恭喜你,可以进所有厂打工了&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if (age &lt; 16)&#123;</span><br><span class="line">    alert(&quot;非常抱歉,厂里不要你&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>当然也是可以嵌套的,比如:</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">var age=17;</span><br><span class="line">if (age &gt;= 18)&#123;</span><br><span class="line">   alert(&quot;恭喜你,可以进所有厂了&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">   if (age &gt;=16)&#123;</span><br><span class="line">       alert(&quot;恭喜你,可以进厂打工了&quot;);</span><br><span class="line">   &#125;else if(age &lt; 16 &amp;&amp; age &gt;= 14)&#123;</span><br><span class="line">       alert(&quot;非常抱歉,厂里不要你&quot;);</span><br><span class="line">   &#125;else&#123;</span><br><span class="line">    alert(&quot;你还是乖乖上幼儿园吧&quot;);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p>当我们对Number做比较时，可以通过比较运算符得到一个布尔值：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">2 &gt; 5; // false</span><br><span class="line">5 &gt;= 2; // true</span><br><span class="line">7 == 7; // true</span><br></pre></td></tr></table></figure></div>
<p>要特别注意相等运算符&#x3D;&#x3D;。JavaScript在设计时，有两种比较运算符：<br><br>第一种是&#x3D;&#x3D;比较，它会自动转换数据类型再比较，很多时候，会得到非常诡异的结果；<br><br>第二种是&#x3D;&#x3D;&#x3D;比较，它不会自动转换数据类型，如果数据类型不一致，返回false，如果一致，再比较。<br><br>由于JavaScript这个设计缺陷，不要使用&#x3D;&#x3D;比较，始终坚持使用&#x3D;&#x3D;&#x3D;比较。<br><br>另一个例外是NaN这个特殊的Number与所有其他值都不相等，包括它自己：<br></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">NaN === NaN; // false</span><br></pre></td></tr></table></figure></div>
<p>唯一能判断NaN的方法是通过isNaN()函数：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">isNaN(NaN); // true</span><br></pre></td></tr></table></figure></div>
<h2 id="HTML嵌入JavaScript"><a href="#HTML嵌入JavaScript" class="headerlink" title="HTML嵌入JavaScript"></a>HTML嵌入JavaScript</h2>]]></content>
      <categories>
        <category>编程</category>
        <category>语言</category>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>基础教程</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言入门</title>
    <url>/%E5%AD%A6%E4%B9%A0/%E7%BC%96%E7%A8%8B/%E8%AF%AD%E8%A8%80/%E9%AB%98%E7%BA%A7%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80/C%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/C%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>本文参考以下文章及书籍</p>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><blockquote>
<ul>
<li><a href="#c%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86">C语言基础知识</a><blockquote>
<ul>
<li><a href="#c%E8%AF%AD%E8%A8%80%E7%9A%84%E5%8E%86%E5%8F%B2">C语言历史</a></li>
<li><a href="#%E7%AC%AC%E4%B8%80%E4%B8%AAc%E8%AF%AD%E8%A8%80%E4%BB%A3%E7%A0%81">第一个C语言代码</a></li>
</ul>
</blockquote>
</li>
</ul>
</blockquote>
<h1 id="C语言基础知识"><a href="#C语言基础知识" class="headerlink" title="C语言基础知识"></a>C语言基础知识</h1><h2 id="C语言的历史"><a href="#C语言的历史" class="headerlink" title="C语言的历史"></a>C语言的历史</h2><ul>
<li>机器语言<blockquote>
<p>机器语言由0和1组成,也就是二进制代码,特点就是计算机可以直接识别机械语言.</p>
</blockquote>
</li>
<li>汇编语言<blockquote>
<p>汇编语言是基于机器语言的,用一些容易理解和记忆的字母，单词来代替一个特定的指令。通过这种方法，人们很容易去阅读 已经完成的程序或者理解程序正在执行的功能，对现有程序的bug修复以及运营维护都变得更加简单方便.</p>
</blockquote>
</li>
<li>高级语言<blockquote>
<p>高级语言是一种比汇编语言更高级的编程语言,它更加贴近人类所使用的语言.</p>
</blockquote>
</li>
<li>C语言<blockquote>
<p>1972年，计算机科学家丹尼斯·里奇发明了C语言,它是在B语言的基础上发展和完善起来的.</p>
</blockquote>
</li>
</ul>
<h2 id="C语言编译环境配置"><a href="#C语言编译环境配置" class="headerlink" title="C语言编译环境配置"></a>C语言编译环境配置</h2><h2 id="第一个C语言代码"><a href="#第一个C语言代码" class="headerlink" title="第一个C语言代码"></a>第一个C语言代码</h2><div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span> <span class="comment">//整个语句代表有关的预处理操作,include是文件包含命令,stdio.h是一个头文件.</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> <span class="comment">//整个语句代表着函数头,int表示定义整形.也就是说,整个函数体只能返回一个整形.</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hello World&quot;</span>); <span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//结束程序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>编程</category>
        <category>语言</category>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>基础教程</tag>
        <tag>C语言</tag>
      </tags>
  </entry>
</search>
